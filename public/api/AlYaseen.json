{
	"info": {
		"_postman_id": "8e4df20f-39e6-4e2b-83e1-485b75fb38b5",
		"name": "Al-Yaseen ERP API Documentation Main",
		"description": "API documentation for Al-Yaseen ERP Project Management and Inventory Management modules.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25686972"
	},
	"item": [
		{
			"name": "Endpoints",
			"item": [
				{
					"name": "POST api/v1/auth/register",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST api/v1/auth/login",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST api/v1/auth/send-otp",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/auth/send-otp",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"send-otp"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST api/v1/auth/verify-otp",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/auth/verify-otp",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"verify-otp"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET api/v1/auth/me",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/auth/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"me"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/auth/me",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"auth",
										"me"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/auth/me could not be found.\"\n}"
						}
					]
				},
				{
					"name": "POST api/v1/auth/logout",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/auth/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"logout"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Inventory Management / BOM Items",
			"item": [
				{
					"name": "✅ Display a listing of BOM items with enhanced search and filtering.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/bom-items/list-components",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"bom-items",
								"list-components"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/bom-items/list-components",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"bom-items",
										"list-components"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/bom-items/list-components could not be found.\"\n}"
						}
					]
				},
				{
					"name": "✅ Store a newly created BOM item with all Manufacturing Formula fields.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"item_id\":\"consequatur\",\"component_id\":\"consequatur\",\"unit_id\":\"consequatur\",\"quantity\":45}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/bom-items/create-component",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"bom-items",
								"create-component"
							]
						}
					},
					"response": []
				},
				{
					"name": "Display the specified BOM item.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/bom-items/view-component/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"bom-items",
								"view-component",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the view component."
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/bom-items/view-component/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"bom-items",
										"view-component",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "consequatur",
											"description": "The ID of the view component."
										}
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/bom-items/view-component/consequatur could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Update the specified BOM item.",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"item_id\":\"consequatur\",\"component_id\":\"consequatur\",\"unit_id\":\"consequatur\",\"quantity\":45}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/bom-items/update-component/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"bom-items",
								"update-component",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the update component."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove the specified BOM item.",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/bom-items/delete-component/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"bom-items",
								"delete-component",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the delete component."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get BOM items for a specific item (Bill of Materials).",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/bom-items/by-item/:itemId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"bom-items",
								"by-item",
								":itemId"
							],
							"variable": [
								{
									"key": "itemId",
									"value": "consequatur"
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/bom-items/by-item/:itemId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"bom-items",
										"by-item",
										":itemId"
									],
									"variable": [
										{
											"key": "itemId",
											"value": "consequatur"
										}
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/bom-items/by-item/consequatur could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get items that use a specific component.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/bom-items/by-component/:componentId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"bom-items",
								"by-component",
								":componentId"
							],
							"variable": [
								{
									"key": "componentId",
									"value": "consequatur"
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/bom-items/by-component/:componentId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"bom-items",
										"by-component",
										":componentId"
									],
									"variable": [
										{
											"key": "componentId",
											"value": "consequatur"
										}
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/bom-items/by-component/consequatur could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Calculate material requirements for production.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"item_id\":\"consequatur\",\"production_quantity\":45}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/bom-items/compute-requirements",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"bom-items",
								"compute-requirements"
							]
						}
					},
					"response": []
				},
				{
					"name": "! Filter BOM items by field value.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/bom-items/filter-by-criteria",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"bom-items",
								"filter-by-criteria"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/bom-items/filter-by-criteria",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"bom-items",
										"filter-by-criteria"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/bom-items/filter-by-criteria could not be found.\"\n}"
						}
					]
				},
				{
					"name": "! Get first BOM item.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/bom-items/first-component",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"bom-items",
								"first-component"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/bom-items/first-component",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"bom-items",
										"first-component"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/bom-items/first-component could not be found.\"\n}"
						}
					]
				},
				{
					"name": "! Get last BOM item.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/bom-items/last-component",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"bom-items",
								"last-component"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/bom-items/last-component",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"bom-items",
										"last-component"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/bom-items/last-component could not be found.\"\n}"
						}
					]
				}
			],
			"description": "\nAPIs for managing Bill of Materials (BOM) items, including component relationships and requirements calculation."
		},
		{
			"name": "Inventory Management / Barcode Types",
			"item": [
				{
					"name": "Display a listing of barcode types.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/barcode-types/enumerate-types",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"barcode-types",
								"enumerate-types"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/barcode-types/enumerate-types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"barcode-types",
										"enumerate-types"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/barcode-types/enumerate-types could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Display the specified barcode type.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/barcode-types/view-type/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"barcode-types",
								"view-type",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the view type."
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/barcode-types/view-type/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"barcode-types",
										"view-type",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "consequatur",
											"description": "The ID of the view type."
										}
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/barcode-types/view-type/consequatur could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get barcode type options for dropdown.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/barcode-types/type-options",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"barcode-types",
								"type-options"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/barcode-types/type-options",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"barcode-types",
										"type-options"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/barcode-types/type-options could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get supported barcode types from Milon library.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/barcode-types/supported-formats",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"barcode-types",
								"supported-formats"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/barcode-types/supported-formats",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"barcode-types",
										"supported-formats"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/barcode-types/supported-formats could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Validate a barcode against a specific type.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"barcode\":\"consequatur\",\"barcode_type_id\":\"consequatur\"}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/barcode-types/verify-barcode",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"barcode-types",
								"verify-barcode"
							]
						}
					},
					"response": []
				},
				{
					"name": "Generate barcode image (PNG or SVG).",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"barcode\":\"consequatur\",\"barcode_type_id\":\"consequatur\",\"width\":5,\"height\":16,\"format\":\"svg\",\"color\":\"consequatur\"}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/barcode-types/create-barcode",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"barcode-types",
								"create-barcode"
							]
						}
					},
					"response": []
				},
				{
					"name": "Generate SVG barcode specifically.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"barcode\":\"consequatur\",\"barcode_type_id\":\"consequatur\",\"width\":5,\"height\":16,\"color\":\"consequatur\"}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/barcode-types/create-barcode-svg",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"barcode-types",
								"create-barcode-svg"
							]
						}
					},
					"response": []
				}
			],
			"description": "\nAPIs for managing barcode types, validation, and barcode generation."
		},
		{
			"name": "Inventory Management / Department Warehouses",
			"item": [
				{
					"name": "Display a listing of department warehouses.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/department-warehouses/enumerate-all",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"department-warehouses",
								"enumerate-all"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/department-warehouses/enumerate-all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"department-warehouses",
										"enumerate-all"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/department-warehouses/enumerate-all could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Store a newly created department warehouse.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"department_number\":\"vmqeopfuudtdsufvyvddq\",\"department_name_ar\":\"amniihfqcoynlazghdtqt\",\"department_name_en\":\"qxbajwbpilpmufinllwlo\",\"description\":\"Dolores dolorum amet iste laborum eius est dolor.\",\"manager_name\":\"dtdsufvyvddqamniihfqc\",\"manager_phone\":\"oynlazghdtqtqxbajwbpi\",\"manager_email\":\"jaunita.schamberger@example.com\",\"active\":false}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/department-warehouses/create-assignment",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"department-warehouses",
								"create-assignment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Display the specified department warehouse.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/department-warehouses/view-assignment/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"department-warehouses",
								"view-assignment",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the view assignment."
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/department-warehouses/view-assignment/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"department-warehouses",
										"view-assignment",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "consequatur",
											"description": "The ID of the view assignment."
										}
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/department-warehouses/view-assignment/consequatur could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Update the specified department warehouse.",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"department_number\":\"vmqeopfuudtdsufvyvddq\",\"department_name_ar\":\"amniihfqcoynlazghdtqt\",\"department_name_en\":\"qxbajwbpilpmufinllwlo\",\"description\":\"Dolores dolorum amet iste laborum eius est dolor.\",\"manager_name\":\"dtdsufvyvddqamniihfqc\",\"manager_phone\":\"oynlazghdtqtqxbajwbpi\",\"manager_email\":\"jaunita.schamberger@example.com\",\"active\":true}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/department-warehouses/update-assignment/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"department-warehouses",
								"update-assignment",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the update assignment."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove the specified department warehouse.",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/department-warehouses/remove-assignment/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"department-warehouses",
								"remove-assignment",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the remove assignment."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get the first department warehouse.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/department-warehouses/primary-assignment",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"department-warehouses",
								"primary-assignment"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/department-warehouses/primary-assignment",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"department-warehouses",
										"primary-assignment"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/department-warehouses/primary-assignment could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get the last department warehouse.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/department-warehouses/ultimate-assignment",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"department-warehouses",
								"ultimate-assignment"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/department-warehouses/ultimate-assignment",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"department-warehouses",
										"ultimate-assignment"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/department-warehouses/ultimate-assignment could not be found.\"\n}"
						}
					]
				}
			],
			"description": "\nAPIs for managing department-warehouse relationships and access control."
		},
		{
			"name": "Inventory Management / Inventory Items",
			"item": [
				{
					"name": "List Inventory Items",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/inventory-items/survey-all?active=1&category_id=1&supplier_id=1&search=laptop&sort_by=name&sort_direction=asc&per_page=20",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"inventory-items",
								"survey-all"
							],
							"query": [
								{
									"key": "active",
									"value": "1",
									"description": "Filter by active status."
								},
								{
									"key": "category_id",
									"value": "1",
									"description": "Filter by category ID."
								},
								{
									"key": "supplier_id",
									"value": "1",
									"description": "Filter by supplier ID."
								},
								{
									"key": "search",
									"value": "laptop",
									"description": "Search across item names and descriptions."
								},
								{
									"key": "sort_by",
									"value": "name",
									"description": "Field to sort by."
								},
								{
									"key": "sort_direction",
									"value": "asc",
									"description": "Sort direction (asc/desc)."
								},
								{
									"key": "per_page",
									"value": "20",
									"description": "Number of items per page (default: 15)."
								}
							]
						},
						"description": "Retrieve a paginated list of inventory items with filtering and search capabilities."
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/inventory-items/survey-all?active=1&category_id=1&supplier_id=1&search=laptop&sort_by=name&sort_direction=asc&per_page=20",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"inventory-items",
										"survey-all"
									],
									"query": [
										{
											"key": "active",
											"value": "1",
											"description": "Filter by active status."
										},
										{
											"key": "category_id",
											"value": "1",
											"description": "Filter by category ID."
										},
										{
											"key": "supplier_id",
											"value": "1",
											"description": "Filter by supplier ID."
										},
										{
											"key": "search",
											"value": "laptop",
											"description": "Search across item names and descriptions."
										},
										{
											"key": "sort_by",
											"value": "name",
											"description": "Field to sort by."
										},
										{
											"key": "sort_direction",
											"value": "asc",
											"description": "Sort direction (asc/desc)."
										},
										{
											"key": "per_page",
											"value": "20",
											"description": "Number of items per page (default: 15)."
										}
									]
								},
								"description": "Retrieve a paginated list of inventory items with filtering and search capabilities."
							},
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"name\": \"Laptop Dell XPS 13\",\n      \"sku\": \"DELL-XPS-13\",\n      \"category\": \"Electronics\",\n      \"quantity\": 50,\n      \"unit_price\": 1200.00,\n      \"supplier\": \"Dell Inc.\",\n      \"active\": true,\n      \"created_at\": \"2024-01-01T00:00:00.000000Z\"\n    }\n  ],\n  \"message\": \"Inventory items retrieved successfully\"\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/inventory-items/survey-all?active=1&category_id=1&supplier_id=1&search=laptop&sort_by=name&sort_direction=asc&per_page=20",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"inventory-items",
										"survey-all"
									],
									"query": [
										{
											"key": "active",
											"value": "1",
											"description": "Filter by active status."
										},
										{
											"key": "category_id",
											"value": "1",
											"description": "Filter by category ID."
										},
										{
											"key": "supplier_id",
											"value": "1",
											"description": "Filter by supplier ID."
										},
										{
											"key": "search",
											"value": "laptop",
											"description": "Search across item names and descriptions."
										},
										{
											"key": "sort_by",
											"value": "name",
											"description": "Field to sort by."
										},
										{
											"key": "sort_direction",
											"value": "asc",
											"description": "Sort direction (asc/desc)."
										},
										{
											"key": "per_page",
											"value": "20",
											"description": "Number of items per page (default: 15)."
										}
									]
								},
								"description": "Retrieve a paginated list of inventory items with filtering and search capabilities."
							},
							"code": 500,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"message\": \"Error retrieving inventory items: Database connection failed\"\n}"
						}
					]
				},
				{
					"name": "Store a newly created inventory item.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"item_number\":\"vmqeopfuudtdsufvyvddq\",\"item_name_ar\":\"amniihfqcoynlazghdtqt\",\"item_name_en\":\"qxbajwbpilpmufinllwlo\",\"barcode\":\"auydlsmsjuryvojcybzvr\",\"model\":\"byickznkygloigmkwxphl\",\"unit\":\"vazjrcnfbaqywuxhgjjmz\",\"quantity\":72,\"unit_price\":82,\"minimum_limit\":34,\"reorder_limit\":71,\"notes\":\"consequatur\",\"active\":true}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/inventory-items/register-inventory",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"inventory-items",
								"register-inventory"
							]
						}
					},
					"response": []
				},
				{
					"name": "Display the specified inventory item.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/inventory-items/examine-inventory/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"inventory-items",
								"examine-inventory",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the examine inventory."
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/inventory-items/examine-inventory/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"inventory-items",
										"examine-inventory",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "consequatur",
											"description": "The ID of the examine inventory."
										}
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/inventory-items/examine-inventory/consequatur could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Update the specified inventory item.",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"item_number\":\"vmqeopfuudtdsufvyvddq\",\"item_name_ar\":\"amniihfqcoynlazghdtqt\",\"item_name_en\":\"qxbajwbpilpmufinllwlo\",\"barcode\":\"auydlsmsjuryvojcybzvr\",\"model\":\"byickznkygloigmkwxphl\",\"unit\":\"vazjrcnfbaqywuxhgjjmz\",\"quantity\":72,\"unit_price\":82,\"minimum_limit\":34,\"reorder_limit\":71,\"notes\":\"consequatur\",\"active\":false}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/inventory-items/modify-inventory/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"inventory-items",
								"modify-inventory",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the modify inventory."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove the specified inventory item.",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/inventory-items/remove-inventory/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"inventory-items",
								"remove-inventory",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the remove inventory."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "! Get first inventory item.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/inventory-items/first-inventory",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"inventory-items",
								"first-inventory"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/inventory-items/first-inventory",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"inventory-items",
										"first-inventory"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/inventory-items/first-inventory could not be found.\"\n}"
						}
					]
				},
				{
					"name": "! Get last inventory item.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/inventory-items/last-inventory",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"inventory-items",
								"last-inventory"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/inventory-items/last-inventory",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"inventory-items",
										"last-inventory"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/inventory-items/last-inventory could not be found.\"\n}"
						}
					]
				},
				{
					"name": "! Get low stock items.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/inventory-items/low-stock-items",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"inventory-items",
								"low-stock-items"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/inventory-items/low-stock-items",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"inventory-items",
										"low-stock-items"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/inventory-items/low-stock-items could not be found.\"\n}"
						}
					]
				},
				{
					"name": "! Get items that need reordering.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/inventory-items/reorder-required-items",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"inventory-items",
								"reorder-required-items"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/inventory-items/reorder-required-items",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"inventory-items",
										"reorder-required-items"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/inventory-items/reorder-required-items could not be found.\"\n}"
						}
					]
				}
			],
			"description": "\nAPIs for managing inventory items, stock levels, and warehouse operations."
		},
		{
			"name": "Inventory Management / Inventory Movements",
			"item": [
				{
					"name": "✅ Display a listing of inventory movements.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/inventory-movements/monitor-all",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"inventory-movements",
								"monitor-all"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/inventory-movements/monitor-all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"inventory-movements",
										"monitor-all"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/inventory-movements/monitor-all could not be found.\"\n}"
						}
					]
				},
				{
					"name": "✅ Store a newly created inventory movement (Add Warehouse Movement).",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"movement_number\":\"vmqeopfuudtdsufvyvddq\",\"movement_type\":\"manufacturing\",\"movement_date\":\"2025-09-23T07:29:19\",\"movement_time\":\"07:29:19\",\"vendor_id\":17,\"customer_id\":17,\"vendor_name\":\"mqeopfuudtdsufvyvddqa\",\"customer_name\":\"mniihfqcoynlazghdtqtq\",\"movement_description\":\"xbajwbpilpmufinllwloa\",\"inbound_invoice_id\":17,\"outbound_invoice_id\":17,\"inbound_invoice_number\":\"mqeopfuudtdsufvyvddqa\",\"outbound_invoice_number\":\"mniihfqcoynlazghdtqtq\",\"user_number\":\"xbajwbpilpmufinllwloa\",\"shipment_number\":\"uydlsmsjuryvojcybzvrb\",\"invoice_number\":\"yickznkygloigmkwxphlv\",\"reference\":\"azjrcnfbaqywuxhgjjmzu\",\"warehouse_id\":17,\"status\":\"cancelled\",\"movement_data\":[{\"item_id\":17,\"unit_id\":17,\"quantity\":45,\"unit_cost\":56,\"unit_price\":16,\"inventory_count\":50,\"notes\":\"pfuudtdsufvyvddqamnii\",\"batch_number\":\"hfqcoynlazghdtqtqxbaj\",\"expiry_date\":\"2025-09-23T07:29:19\",\"serial_number\":\"wbpilpmufinllwloauydl\",\"location_code\":\"smsjuryvojcybzvrbyick\",\"shelf_number\":\"znkygloigmkwxphlvazjr\",\"bin_number\":\"cnfbaqywuxhgjjmzuxjub\"}]}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/inventory-movements/initiate-movement",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"inventory-movements",
								"initiate-movement"
							]
						}
					},
					"response": []
				},
				{
					"name": "✅ Display the specified inventory movement.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/inventory-movements/review-movement/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"inventory-movements",
								"review-movement",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the review movement."
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/inventory-movements/review-movement/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"inventory-movements",
										"review-movement",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "consequatur",
											"description": "The ID of the review movement."
										}
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/inventory-movements/review-movement/consequatur could not be found.\"\n}"
						}
					]
				},
				{
					"name": "✅ Update the specified inventory movement.",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"movement_number\":\"vmqeopfuudtdsufvyvddq\",\"movement_type\":\"manufacturing\",\"movement_date\":\"2025-09-23T07:29:19\",\"movement_time\":\"07:29:19\",\"vendor_id\":17,\"customer_id\":17,\"vendor_name\":\"mqeopfuudtdsufvyvddqa\",\"customer_name\":\"mniihfqcoynlazghdtqtq\",\"movement_description\":\"xbajwbpilpmufinllwloa\",\"inbound_invoice_id\":17,\"outbound_invoice_id\":17,\"inbound_invoice_number\":\"mqeopfuudtdsufvyvddqa\",\"outbound_invoice_number\":\"mniihfqcoynlazghdtqtq\",\"user_number\":\"xbajwbpilpmufinllwloa\",\"shipment_number\":\"uydlsmsjuryvojcybzvrb\",\"invoice_number\":\"yickznkygloigmkwxphlv\",\"reference\":\"azjrcnfbaqywuxhgjjmzu\",\"warehouse_id\":17,\"status\":\"cancelled\",\"movement_data\":[{\"id\":17,\"item_id\":17,\"unit_id\":17,\"quantity\":45,\"unit_cost\":56,\"unit_price\":16,\"inventory_count\":50,\"notes\":\"pfuudtdsufvyvddqamnii\",\"batch_number\":\"hfqcoynlazghdtqtqxbaj\",\"expiry_date\":\"2025-09-23T07:29:19\",\"serial_number\":\"wbpilpmufinllwloauydl\",\"location_code\":\"smsjuryvojcybzvrbyick\",\"shelf_number\":\"znkygloigmkwxphlvazjr\",\"bin_number\":\"cnfbaqywuxhgjjmzuxjub\",\"_delete\":true}]}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/inventory-movements/adjust-movement/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"inventory-movements",
								"adjust-movement",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the adjust movement."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "✅ Remove the specified inventory movement (soft delete).",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/inventory-movements/cancel-movement/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"inventory-movements",
								"cancel-movement",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the cancel movement."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "✅ Get form data for inventory movement.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/inventory-movements/setup-data",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"inventory-movements",
								"setup-data"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/inventory-movements/setup-data",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"inventory-movements",
										"setup-data"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/inventory-movements/setup-data could not be found.\"\n}"
						}
					]
				},
				{
					"name": "✅ Filter inventory movements by specific field value (Selection-Driven Display).",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/inventory-movements/filter-by-criteria",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"inventory-movements",
								"filter-by-criteria"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/inventory-movements/filter-by-criteria",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"inventory-movements",
										"filter-by-criteria"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/inventory-movements/filter-by-criteria could not be found.\"\n}"
						}
					]
				},
				{
					"name": "✅ Get trashed inventory movements (soft deleted).",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/inventory-movements/archived-movements",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"inventory-movements",
								"archived-movements"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/inventory-movements/archived-movements",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"inventory-movements",
										"archived-movements"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/inventory-movements/archived-movements could not be found.\"\n}"
						}
					]
				},
				{
					"name": "✅ Get first inventory movement (First/Last sorting).",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/inventory-movements/initial-movement",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"inventory-movements",
								"initial-movement"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/inventory-movements/initial-movement",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"inventory-movements",
										"initial-movement"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/inventory-movements/initial-movement could not be found.\"\n}"
						}
					]
				},
				{
					"name": "✅ Get last inventory movement (First/Last sorting).",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/inventory-movements/final-movement",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"inventory-movements",
								"final-movement"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/inventory-movements/final-movement",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"inventory-movements",
										"final-movement"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/inventory-movements/final-movement could not be found.\"\n}"
						}
					]
				},
				{
					"name": "✅ Get next sequential movement number for preview.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/inventory-movements/next-sequence-number",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"inventory-movements",
								"next-sequence-number"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/inventory-movements/next-sequence-number",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"inventory-movements",
										"next-sequence-number"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/inventory-movements/next-sequence-number could not be found.\"\n}"
						}
					]
				},
				{
					"name": "✅ Get movement data with sorting (First/Last for movement data table).",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/inventory-movements/:id/movement-details",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"inventory-movements",
								":id",
								"movement-details"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the inventory movement."
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/inventory-movements/:id/movement-details",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"inventory-movements",
										":id",
										"movement-details"
									],
									"variable": [
										{
											"key": "id",
											"value": "consequatur",
											"description": "The ID of the inventory movement."
										}
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/inventory-movements/consequatur/movement-details could not be found.\"\n}"
						}
					]
				},
				{
					"name": "✅ Confirm inventory movement.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/inventory-movements/:id/validate-movement",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"inventory-movements",
								":id",
								"validate-movement"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the inventory movement."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "✅ Duplicate inventory movement with new date and time.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/inventory-movements/:id/replicate-movement",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"inventory-movements",
								":id",
								"replicate-movement"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the inventory movement."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "✅ Restore a soft deleted inventory movement.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/inventory-movements/:id/reactivate-movement",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"inventory-movements",
								":id",
								"reactivate-movement"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the inventory movement."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "✅ Permanently delete an inventory movement.",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/inventory-movements/:id/permanently-remove",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"inventory-movements",
								":id",
								"permanently-remove"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the inventory movement."
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "\nAPIs for managing inventory movements, including warehouse transfers, adjustments, and movement tracking."
		},
		{
			"name": "Inventory Management / Item Types",
			"item": [
				{
					"name": "Display a listing of item types.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/item-types/catalog-types",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"item-types",
								"catalog-types"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/item-types/catalog-types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"item-types",
										"catalog-types"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/item-types/catalog-types could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Store a newly created item type.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":\"vmqeopfuudtdsufvyvddq\",\"name_ar\":\"amniihfqcoynlazghdtqt\",\"description\":\"Dolores dolorum amet iste laborum eius est dolor.\",\"description_ar\":\"consequatur\"}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/item-types/establish-type",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"item-types",
								"establish-type"
							]
						}
					},
					"response": []
				},
				{
					"name": "Display the specified item type.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/item-types/examine-type/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"item-types",
								"examine-type",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the examine type."
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/item-types/examine-type/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"item-types",
										"examine-type",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "consequatur",
											"description": "The ID of the examine type."
										}
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/item-types/examine-type/consequatur could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Update the specified item type.",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":\"vmqeopfuudtdsufvyvddq\",\"name_ar\":\"amniihfqcoynlazghdtqt\",\"description\":\"Dolores dolorum amet iste laborum eius est dolor.\",\"description_ar\":\"consequatur\",\"is_active\":true}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/item-types/modify-type/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"item-types",
								"modify-type",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the modify type."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove the specified item type.",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/item-types/eliminate-type/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"item-types",
								"eliminate-type",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the eliminate type."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get item type options for dropdown.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/item-types/type-selections",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"item-types",
								"type-selections"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/item-types/type-selections",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"item-types",
										"type-selections"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/item-types/type-selections could not be found.\"\n}"
						}
					]
				}
			],
			"description": "\nAPIs for managing item types, categories, and item classification."
		},
		{
			"name": "Inventory Management / Item Units",
			"item": [
				{
					"name": "Display a listing of item units.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/item-units/list-all",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"item-units",
								"list-all"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/item-units/list-all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"item-units",
										"list-all"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/item-units/list-all could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Store a newly created item unit.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"item_id\":\"consequatur\",\"unit_id\":\"consequatur\",\"conversion_rate\":45,\"is_default\":true,\"unit_type\":\"third\",\"quantity_factor\":56,\"balance_unit\":\"liter\",\"custom_balance_unit\":\"eopfuudtdsufvyvddqamn\",\"length\":28,\"width\":30,\"height\":25,\"second_unit\":\"piece\",\"custom_second_unit\":\"fqcoynlazghdtqtqxbajw\",\"second_unit_contains\":\"bpilpmufinllwloauydls\",\"custom_second_unit_contains\":\"msjuryvojcybzvrbyickz\",\"second_unit_content\":\"consequatur\",\"second_unit_item_number\":\"mqeopfuudtdsufvyvddqa\",\"third_unit\":\"ton\",\"custom_third_unit\":\"mniihfqcoynlazghdtqtq\",\"third_unit_contains\":\"xbajwbpilpmufinllwloa\",\"custom_third_unit_contains\":\"uydlsmsjuryvojcybzvrb\",\"third_unit_content\":\"consequatur\",\"third_unit_item_number\":\"mqeopfuudtdsufvyvddqa\",\"contains\":\"mniihfqcoynlazghdtqtq\",\"custom_contains\":\"xbajwbpilpmufinllwloa\",\"unit_content\":\"consequatur\",\"unit_item_number\":\"mqeopfuudtdsufvyvddqa\",\"unit_purchase_price\":45,\"unit_sale_price\":46,\"status\":\"active\"}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/item-units/establish-unit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"item-units",
								"establish-unit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Display the specified item unit.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/item-units/examine-unit/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"item-units",
								"examine-unit",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the examine unit."
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/item-units/examine-unit/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"item-units",
										"examine-unit",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "consequatur",
											"description": "The ID of the examine unit."
										}
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/item-units/examine-unit/consequatur could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Update the specified item unit.",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"item_id\":\"consequatur\",\"unit_id\":\"consequatur\",\"conversion_rate\":45,\"is_default\":true,\"unit_type\":\"second\",\"quantity_factor\":56,\"balance_unit\":\"piece\",\"custom_balance_unit\":\"eopfuudtdsufvyvddqamn\",\"length\":28,\"width\":30,\"height\":25,\"second_unit\":\"ton\",\"custom_second_unit\":\"fqcoynlazghdtqtqxbajw\",\"second_unit_contains\":\"bpilpmufinllwloauydls\",\"custom_second_unit_contains\":\"msjuryvojcybzvrbyickz\",\"second_unit_content\":\"consequatur\",\"second_unit_item_number\":\"mqeopfuudtdsufvyvddqa\",\"third_unit\":\"liter\",\"custom_third_unit\":\"mniihfqcoynlazghdtqtq\",\"third_unit_contains\":\"xbajwbpilpmufinllwloa\",\"custom_third_unit_contains\":\"uydlsmsjuryvojcybzvrb\",\"third_unit_content\":\"consequatur\",\"third_unit_item_number\":\"mqeopfuudtdsufvyvddqa\",\"contains\":\"mniihfqcoynlazghdtqtq\",\"custom_contains\":\"xbajwbpilpmufinllwloa\",\"unit_content\":\"consequatur\",\"unit_item_number\":\"mqeopfuudtdsufvyvddqa\",\"unit_purchase_price\":45,\"unit_sale_price\":46,\"status\":\"inactive\"}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/item-units/adjust-unit/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"item-units",
								"adjust-unit",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the adjust unit."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove the specified item unit.",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/item-units/remove-unit/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"item-units",
								"remove-unit",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the remove unit."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get unit type options.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/item-units/type-selections",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"item-units",
								"type-selections"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/item-units/type-selections",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"item-units",
										"type-selections"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/item-units/type-selections could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get contains options for item units.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/item-units/container-selections",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"item-units",
								"container-selections"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/item-units/container-selections",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"item-units",
										"container-selections"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/item-units/container-selections could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get item unit form data.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/item-units/form-setup",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"item-units",
								"form-setup"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/item-units/form-setup",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"item-units",
										"form-setup"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/item-units/form-setup could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Calculate conversion between units.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"from_unit_id\":\"consequatur\",\"to_unit_id\":\"consequatur\",\"quantity\":45}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/item-units/compute-conversion",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"item-units",
								"compute-conversion"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get item units for a specific item.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/item-units/by-item/:itemId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"item-units",
								"by-item",
								":itemId"
							],
							"variable": [
								{
									"key": "itemId",
									"value": "consequatur"
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/item-units/by-item/:itemId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"item-units",
										"by-item",
										":itemId"
									],
									"variable": [
										{
											"key": "itemId",
											"value": "consequatur"
										}
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/item-units/by-item/consequatur could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get item units by type.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/item-units/by-item-type/:itemId/:type",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"item-units",
								"by-item-type",
								":itemId",
								":type"
							],
							"variable": [
								{
									"key": "itemId",
									"value": "consequatur"
								},
								{
									"key": "type",
									"value": "consequatur"
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/item-units/by-item-type/:itemId/:type",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"item-units",
										"by-item-type",
										":itemId",
										":type"
									],
									"variable": [
										{
											"key": "itemId",
											"value": "consequatur"
										},
										{
											"key": "type",
											"value": "consequatur"
										}
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/item-units/by-item-type/consequatur/consequatur could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get comprehensive item unit data.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/item-units/comprehensive-data/:itemId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"item-units",
								"comprehensive-data",
								":itemId"
							],
							"variable": [
								{
									"key": "itemId",
									"value": "consequatur"
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/item-units/comprehensive-data/:itemId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"item-units",
										"comprehensive-data",
										":itemId"
									],
									"variable": [
										{
											"key": "itemId",
											"value": "consequatur"
										}
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/item-units/comprehensive-data/consequatur could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Set default unit for an item.",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/item-units/:id/designate-default",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"item-units",
								":id",
								"designate-default"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the item unit."
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "\nAPIs for managing item unit relationships, conversions, and unit-specific operations."
		},
		{
			"name": "Inventory Management / Items",
			"item": [
				{
					"name": "List Items",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/items/inventory-all?type=product&branch_id=1&unit_id=1&parent_id=1&stock_tracking=1&search=laptop&company_id=1&per_page=20",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"items",
								"inventory-all"
							],
							"query": [
								{
									"key": "type",
									"value": "product",
									"description": "Filter by item type."
								},
								{
									"key": "branch_id",
									"value": "1",
									"description": "Filter by branch ID."
								},
								{
									"key": "unit_id",
									"value": "1",
									"description": "Filter by unit ID."
								},
								{
									"key": "parent_id",
									"value": "1",
									"description": "Filter by parent item ID."
								},
								{
									"key": "stock_tracking",
									"value": "1",
									"description": "Filter by stock tracking enabled."
								},
								{
									"key": "search",
									"value": "laptop",
									"description": "Search across item names and descriptions."
								},
								{
									"key": "company_id",
									"value": "1",
									"description": "Filter by company ID."
								},
								{
									"key": "per_page",
									"value": "20",
									"description": "Number of items per page (default: 15)."
								}
							]
						},
						"description": "Retrieve a paginated list of inventory items with comprehensive filtering options."
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/items/inventory-all?type=product&branch_id=1&unit_id=1&parent_id=1&stock_tracking=1&search=laptop&company_id=1&per_page=20",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"items",
										"inventory-all"
									],
									"query": [
										{
											"key": "type",
											"value": "product",
											"description": "Filter by item type."
										},
										{
											"key": "branch_id",
											"value": "1",
											"description": "Filter by branch ID."
										},
										{
											"key": "unit_id",
											"value": "1",
											"description": "Filter by unit ID."
										},
										{
											"key": "parent_id",
											"value": "1",
											"description": "Filter by parent item ID."
										},
										{
											"key": "stock_tracking",
											"value": "1",
											"description": "Filter by stock tracking enabled."
										},
										{
											"key": "search",
											"value": "laptop",
											"description": "Search across item names and descriptions."
										},
										{
											"key": "company_id",
											"value": "1",
											"description": "Filter by company ID."
										},
										{
											"key": "per_page",
											"value": "20",
											"description": "Number of items per page (default: 15)."
										}
									]
								},
								"description": "Retrieve a paginated list of inventory items with comprehensive filtering options."
							},
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"name\": \"Laptop Dell XPS 13\",\n      \"code\": \"DELL-XPS-13\",\n      \"type\": \"product\",\n      \"unit\": {\n        \"id\": 1,\n        \"name\": \"Piece\"\n      },\n      \"stock_tracking\": true,\n      \"company\": {\n        \"id\": 1,\n        \"name\": \"ABC Company\"\n      },\n      \"created_at\": \"2024-01-01T00:00:00.000000Z\"\n    }\n  ],\n  \"message\": \"Items retrieved successfully\"\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/items/inventory-all?type=product&branch_id=1&unit_id=1&parent_id=1&stock_tracking=1&search=laptop&company_id=1&per_page=20",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"items",
										"inventory-all"
									],
									"query": [
										{
											"key": "type",
											"value": "product",
											"description": "Filter by item type."
										},
										{
											"key": "branch_id",
											"value": "1",
											"description": "Filter by branch ID."
										},
										{
											"key": "unit_id",
											"value": "1",
											"description": "Filter by unit ID."
										},
										{
											"key": "parent_id",
											"value": "1",
											"description": "Filter by parent item ID."
										},
										{
											"key": "stock_tracking",
											"value": "1",
											"description": "Filter by stock tracking enabled."
										},
										{
											"key": "search",
											"value": "laptop",
											"description": "Search across item names and descriptions."
										},
										{
											"key": "company_id",
											"value": "1",
											"description": "Filter by company ID."
										},
										{
											"key": "per_page",
											"value": "20",
											"description": "Number of items per page (default: 15)."
										}
									]
								},
								"description": "Retrieve a paginated list of inventory items with comprehensive filtering options."
							},
							"code": 500,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"message\": \"Error retrieving items: Database connection failed\"\n}"
						}
					]
				},
				{
					"name": "Store a newly created item with all comprehensive data (Save functionality).",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"unit_id\":\"consequatur\",\"item_number\":\"mqeopfuudtdsufvyvddqa\",\"code\":\"mniihfqcoynlazghdtqtq\",\"catalog_number\":\"xbajwbpilpmufinllwloa\",\"name\":\"uydlsmsjuryvojcybzvrb\",\"name_ar\":\"yickznkygloigmkwxphlv\",\"description\":\"Dolores dolorum amet iste laborum eius est dolor.\",\"description_ar\":\"consequatur\",\"model\":\"mqeopfuudtdsufvyvddqa\",\"unit_name\":\"mniihfqcoynlazghdtqtq\",\"type\":\"raw_material\",\"quantity\":80,\"balance\":11613.31890586,\"minimum_limit\":50,\"maximum_limit\":55,\"reorder_limit\":19,\"max_reorder_limit\":70,\"cost_price\":70,\"purchase_price\":12,\"first_purchase_price\":66,\"second_purchase_price\":13,\"third_purchase_price\":65,\"purchase_discount_rate\":20,\"purchase_prices_include_vat\":true,\"sale_price\":18,\"minimum_sale_price\":74,\"first_sale_price\":87,\"second_sale_price\":76,\"third_sale_price\":10,\"sale_discount_rate\":3,\"maximum_sale_discount_rate\":17,\"minimum_allowed_sale_price\":1,\"sale_prices_include_vat\":false,\"item_subject_to_vat\":true,\"notes\":\"consequatur\",\"barcode\":\"mqeopfuudtdsufvyvddqa\",\"barcode_type\":\"C39\",\"expiry_date\":\"2106-10-22\",\"image\":\"mqeopfuudtdsufvyvddqa\",\"color\":\"mniihfqcoynlazghdtqtq\",\"item_type\":\"xbajwbpilpmufinllwloa\",\"custom_item_type\":\"uydlsmsjuryvojcybzvrb\",\"custom_item_type_ar\":\"yickznkygloigmkwxphlv\",\"active\":false,\"stock_tracking\":false}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/items/register-item",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"items",
								"register-item"
							]
						}
					},
					"response": []
				},
				{
					"name": "Display the specified item with all available data.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/items/inspect-item/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"items",
								"inspect-item",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the inspect item."
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/items/inspect-item/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"items",
										"inspect-item",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "consequatur",
											"description": "The ID of the inspect item."
										}
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/items/inspect-item/consequatur could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Update the specified item.",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"unit_id\":\"consequatur\",\"item_number\":\"mqeopfuudtdsufvyvddqa\",\"code\":\"mniihfqcoynlazghdtqtq\",\"catalog_number\":\"xbajwbpilpmufinllwloa\",\"name\":\"uydlsmsjuryvojcybzvrb\",\"description\":\"Dolores dolorum amet iste laborum eius est dolor.\",\"model\":\"dtdsufvyvddqamniihfqc\",\"unit_name\":\"oynlazghdtqtqxbajwbpi\",\"type\":\"service\",\"quantity\":41,\"balance\":11613.31890586,\"minimum_limit\":50,\"maximum_limit\":55,\"reorder_limit\":19,\"max_reorder_limit\":70,\"first_purchase_price\":70,\"second_purchase_price\":12,\"third_purchase_price\":66,\"purchase_discount_rate\":4,\"purchase_prices_include_vat\":true,\"first_sale_price\":65,\"second_sale_price\":72,\"third_sale_price\":18,\"sale_discount_rate\":21,\"maximum_sale_discount_rate\":24,\"minimum_allowed_sale_price\":76,\"sale_prices_include_vat\":false,\"item_subject_to_vat\":false,\"notes\":\"consequatur\",\"barcode\":\"mqeopfuudtdsufvyvddqa\",\"barcode_type\":\"ITF\",\"expiry_date\":\"2106-10-22\",\"image\":\"mqeopfuudtdsufvyvddqa\",\"color\":\"mniihfqcoynlazghdtqtq\",\"item_type\":\"xbajwbpilpmufinllwloa\",\"active\":true,\"stock_tracking\":false}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/items/modify-item/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"items",
								"modify-item",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the modify item."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove the specified item (soft delete).",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/items/discard-item/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"items",
								"discard-item",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the discard item."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search for items with advanced filtering.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/items/locate-items",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"items",
								"locate-items"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/items/locate-items",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"items",
										"locate-items"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/items/locate-items could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get available fields for dynamic selection.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/items/available-fields",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"items",
								"available-fields"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/items/available-fields",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"items",
										"available-fields"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/items/available-fields could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get sortable columns with their Arabic labels.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/items/sortable-columns",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"items",
								"sortable-columns"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/items/sortable-columns",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"items",
										"sortable-columns"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/items/sortable-columns could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get available categories/types for filtering.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/items/item-categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"items",
								"item-categories"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/items/item-categories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"items",
										"item-categories"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/items/item-categories could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get available warehouses for item creation.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/items/storage-locations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"items",
								"storage-locations"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/items/storage-locations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"items",
										"storage-locations"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/items/storage-locations could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get pricing validation and form data.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/items/pricing-configuration",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"items",
								"pricing-configuration"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/items/pricing-configuration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"items",
										"pricing-configuration"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/items/pricing-configuration could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Validate pricing data.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"item_id\":\"consequatur\",\"proposed_sale_price\":45,\"proposed_discount_rate\":16}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/items/validate-pricing-data",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"items",
								"validate-pricing-data"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get barcode types for dropdown.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/items/barcode-type-options",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"items",
								"barcode-type-options"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/items/barcode-type-options",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"items",
										"barcode-type-options"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/items/barcode-type-options could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get item types for dropdown.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/items/item-type-options",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"items",
								"item-type-options"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/items/item-type-options",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"items",
										"item-type-options"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/items/item-type-options could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Create custom item type.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":\"vmqeopfuudtdsufvyvddq\",\"name_ar\":\"amniihfqcoynlazghdtqt\"}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/items/create-custom-type",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"items",
								"create-custom-type"
							]
						}
					},
					"response": []
				},
				{
					"name": "Validate barcode format.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"barcode\":\"consequatur\",\"barcode_type\":\"C128\"}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/items/validate-barcode-format",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"items",
								"validate-barcode-format"
							]
						}
					},
					"response": []
				},
				{
					"name": "Generate barcode for item (PNG or SVG).",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"width\":9,\"height\":13,\"format\":\"svg\",\"color\":\"consequatur\"}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/items/:item/produce-barcode",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"items",
								":item",
								"produce-barcode"
							],
							"variable": [
								{
									"key": "item",
									"value": "consequatur",
									"description": "The item."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Generate SVG barcode for item specifically.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"width\":9,\"height\":13,\"color\":\"consequatur\"}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/items/:item/produce-barcode-svg",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"items",
								":item",
								"produce-barcode-svg"
							],
							"variable": [
								{
									"key": "item",
									"value": "consequatur",
									"description": "The item."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all transactions/movements for a specific item.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/items/:item/item-transactions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"items",
								":item",
								"item-transactions"
							],
							"variable": [
								{
									"key": "item",
									"value": "consequatur",
									"description": "The item."
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/items/:item/item-transactions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"items",
										":item",
										"item-transactions"
									],
									"variable": [
										{
											"key": "item",
											"value": "consequatur",
											"description": "The item."
										}
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/items/consequatur/item-transactions could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Export item transactions to Excel.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/items/:item/export-transactions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"items",
								":item",
								"export-transactions"
							],
							"variable": [
								{
									"key": "item",
									"value": "consequatur",
									"description": "The item."
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/items/:item/export-transactions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"items",
										":item",
										"export-transactions"
									],
									"variable": [
										{
											"key": "item",
											"value": "consequatur",
											"description": "The item."
										}
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/items/consequatur/export-transactions could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get the first item.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/items/first-item",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"items",
								"first-item"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/items/first-item",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"items",
										"first-item"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/items/first-item could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get the last item.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/items/last-item",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"items",
								"last-item"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/items/last-item",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"items",
										"last-item"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/items/last-item could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get parent items only.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/items/parent-items",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"items",
								"parent-items"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/items/parent-items",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"items",
										"parent-items"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/items/parent-items could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get items by type.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/items/by-type/:type",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"items",
								"by-type",
								":type"
							],
							"variable": [
								{
									"key": "type",
									"value": "consequatur"
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/items/by-type/:type",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"items",
										"by-type",
										":type"
									],
									"variable": [
										{
											"key": "type",
											"value": "consequatur"
										}
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/items/by-type/consequatur could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get trashed (soft deleted) items.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/items/deleted-items",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"items",
								"deleted-items"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/items/deleted-items",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"items",
										"deleted-items"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/items/deleted-items could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get comprehensive preview/review data for an item.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/items/preview-item/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"items",
								"preview-item",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the preview item."
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/items/preview-item/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"items",
										"preview-item",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "consequatur",
											"description": "The ID of the preview item."
										}
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/items/preview-item/consequatur could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Restore a soft deleted item.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/items/:id/restore-item",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"items",
								":id",
								"restore-item"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the item."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Permanently delete an item (force delete).",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/items/:id/permanently-delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"items",
								":id",
								"permanently-delete"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the item."
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "\nAPIs for managing inventory items, including creation, updates, search, and transaction tracking."
		},
		{
			"name": "Inventory Management / ManufacturingFormula",
			"item": [
				{
					"name": "Display a listing of manufacturing formulas with advanced search and filtering.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/manufacturing-formulas/catalog-all",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"manufacturing-formulas",
								"catalog-all"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/manufacturing-formulas/catalog-all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"manufacturing-formulas",
										"catalog-all"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/manufacturing-formulas/catalog-all could not be found.\"\n}"
						}
					]
				},
				{
					"name": "✅ Store Manufacturing Formula via API.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"item_id\":\"consequatur\",\"consumed_quantity\":45,\"produced_quantity\":56,\"labor_cost\":16,\"operating_cost\":50,\"waste_cost\":55,\"formula_name\":\"fuudtdsufvyvddqamniih\",\"formula_description\":\"fqcoynlazghdtqtqxbajw\",\"formula_number\":\"bpilpmufinllwloauydls\",\"selected_purchase_price_type\":\"second\",\"batch_size\":42,\"production_time_minutes\":64,\"preparation_time_minutes\":34,\"production_notes\":\"uryvojcybzvrbyickznky\",\"preparation_notes\":\"gloigmkwxphlvazjrcnfb\",\"usage_instructions\":\"aqywuxhgjjmzuxjubqouz\",\"tolerance_percentage\":18,\"quality_requirements\":\"wiwxtrkimfcatbxspzmra\",\"requires_inspection\":true,\"status\":\"archived\",\"is_active\":true,\"effective_from\":\"2025-09-23T07:29:20\",\"effective_to\":\"2106-10-22\"}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/manufacturing-formulas/establish-formula",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"manufacturing-formulas",
								"establish-formula"
							]
						}
					},
					"response": []
				},
				{
					"name": "Display the specified manufacturing formula.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/manufacturing-formulas/examine-formula/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"manufacturing-formulas",
								"examine-formula",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the examine formula."
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/manufacturing-formulas/examine-formula/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"manufacturing-formulas",
										"examine-formula",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "consequatur",
											"description": "The ID of the examine formula."
										}
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/manufacturing-formulas/examine-formula/consequatur could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Remove the specified manufacturing formula (soft delete).",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/manufacturing-formulas/remove-formula/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"manufacturing-formulas",
								"remove-formula",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the remove formula."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "✅ Get all Item Numbers for dropdown simulation.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/manufacturing-formulas/item-numbers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"manufacturing-formulas",
								"item-numbers"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/manufacturing-formulas/item-numbers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"manufacturing-formulas",
										"item-numbers"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/manufacturing-formulas/item-numbers could not be found.\"\n}"
						}
					]
				},
				{
					"name": "✅ Get Item details by Item Number or Name.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/manufacturing-formulas/item-details",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"manufacturing-formulas",
								"item-details"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/manufacturing-formulas/item-details",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"manufacturing-formulas",
										"item-details"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/manufacturing-formulas/item-details could not be found.\"\n}"
						}
					]
				},
				{
					"name": "✅ Calculate Final Cost for existing formula (API endpoint).",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/manufacturing-formulas/calculate-cost",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"manufacturing-formulas",
								"calculate-cost"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all available fields for dynamic data display.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/manufacturing-formulas/available-fields",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"manufacturing-formulas",
								"available-fields"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/manufacturing-formulas/available-fields",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"manufacturing-formulas",
										"available-fields"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/manufacturing-formulas/available-fields could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get field values for dropdown filtering.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/manufacturing-formulas/field-values",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"manufacturing-formulas",
								"field-values"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/manufacturing-formulas/field-values",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"manufacturing-formulas",
										"field-values"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/manufacturing-formulas/field-values could not be found.\"\n}"
						}
					]
				},
				{
					"name": "✅ Get all available fields for selection.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/manufacturing-formulas/selectable-fields",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"manufacturing-formulas",
								"selectable-fields"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/manufacturing-formulas/selectable-fields",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"manufacturing-formulas",
										"selectable-fields"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/manufacturing-formulas/selectable-fields could not be found.\"\n}"
						}
					]
				},
				{
					"name": "✅ Get field-based data display - Show data based on selected field.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/manufacturing-formulas/field-based-data",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"manufacturing-formulas",
								"field-based-data"
							]
						},
						"description": "When user clicks on any field in the table, show related data."
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/manufacturing-formulas/field-based-data",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"manufacturing-formulas",
										"field-based-data"
									]
								},
								"description": "When user clicks on any field in the table, show related data."
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/manufacturing-formulas/field-based-data could not be found.\"\n}"
						}
					]
				},
				{
					"name": "✅ Get manufacturing formula numbers for dropdown.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/manufacturing-formulas/formula-numbers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"manufacturing-formulas",
								"formula-numbers"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/manufacturing-formulas/formula-numbers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"manufacturing-formulas",
										"formula-numbers"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/manufacturing-formulas/formula-numbers could not be found.\"\n}"
						}
					]
				},
				{
					"name": "✅ Get item details by manufacturing formula number.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/manufacturing-formulas/item-by-formula-number",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"manufacturing-formulas",
								"item-by-formula-number"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/manufacturing-formulas/item-by-formula-number",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"manufacturing-formulas",
										"item-by-formula-number"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/manufacturing-formulas/item-by-formula-number could not be found.\"\n}"
						}
					]
				},
				{
					"name": "✅ Get warehouses for dropdown.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/manufacturing-formulas/warehouses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"manufacturing-formulas",
								"warehouses"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/manufacturing-formulas/warehouses",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"manufacturing-formulas",
										"warehouses"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/manufacturing-formulas/warehouses could not be found.\"\n}"
						}
					]
				},
				{
					"name": "✅ Update prices from suppliers table for a manufactured formula.",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/manufacturing-formulas/update-prices-from-suppliers/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"manufacturing-formulas",
								"update-prices-from-suppliers",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the update prices from supplier."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "✅ Update prices from suppliers table for all manufactured formulas.",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/manufacturing-formulas/update-all-prices-from-suppliers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"manufacturing-formulas",
								"update-all-prices-from-suppliers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Restore a soft deleted manufacturing formula.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/manufacturing-formulas/:id/restore-formula",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"manufacturing-formulas",
								":id",
								"restore-formula"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the manufacturing formula."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Force delete a manufacturing formula (permanent deletion).",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/manufacturing-formulas/:id/permanently-remove",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"manufacturing-formulas",
								":id",
								"permanently-remove"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the manufacturing formula."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get trashed (soft deleted) manufacturing formulas.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/manufacturing-formulas/deleted-formulas",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"manufacturing-formulas",
								"deleted-formulas"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/manufacturing-formulas/deleted-formulas",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"manufacturing-formulas",
										"deleted-formulas"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/manufacturing-formulas/deleted-formulas could not be found.\"\n}"
						}
					]
				}
			],
			"description": " *\n *\n "
		},
		{
			"name": "Inventory Management / Stock Movements",
			"item": [
				{
					"name": "Display a listing of stock movements.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/stock-movements/track-all",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"stock-movements",
								"track-all"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/stock-movements/track-all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"stock-movements",
										"track-all"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/stock-movements/track-all could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Store a newly created stock movement.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"inventory_item_id\":\"consequatur\",\"warehouse_id\":\"consequatur\",\"movement_type\":\"out\",\"reference_type\":\"mqeopfuudtdsufvyvddqa\",\"reference_id\":17,\"quantity\":45,\"unit_cost\":56,\"total_cost\":16,\"notes\":\"consequatur\",\"movement_date\":\"2025-09-23T07:29:17\"}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/stock-movements/record-movement",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"stock-movements",
								"record-movement"
							]
						}
					},
					"response": []
				},
				{
					"name": "Display the specified stock movement.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/stock-movements/examine-movement/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"stock-movements",
								"examine-movement",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the examine movement."
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/stock-movements/examine-movement/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"stock-movements",
										"examine-movement",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "consequatur",
											"description": "The ID of the examine movement."
										}
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/stock-movements/examine-movement/consequatur could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get stock summary for all items.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/stock-movements/movement-summary",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"stock-movements",
								"movement-summary"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/stock-movements/movement-summary",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"stock-movements",
										"movement-summary"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/stock-movements/movement-summary could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get stock movements for a specific item.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/stock-movements/by-item/:itemId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"stock-movements",
								"by-item",
								":itemId"
							],
							"variable": [
								{
									"key": "itemId",
									"value": "consequatur"
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/stock-movements/by-item/:itemId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"stock-movements",
										"by-item",
										":itemId"
									],
									"variable": [
										{
											"key": "itemId",
											"value": "consequatur"
										}
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/stock-movements/by-item/consequatur could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get stock movements for a specific warehouse.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/stock-movements/by-warehouse/:warehouseId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"stock-movements",
								"by-warehouse",
								":warehouseId"
							],
							"variable": [
								{
									"key": "warehouseId",
									"value": "consequatur"
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/stock-movements/by-warehouse/:warehouseId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"stock-movements",
										"by-warehouse",
										":warehouseId"
									],
									"variable": [
										{
											"key": "warehouseId",
											"value": "consequatur"
										}
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/stock-movements/by-warehouse/consequatur could not be found.\"\n}"
						}
					]
				}
			],
			"description": "\nAPIs for managing stock movements, including transfers, adjustments, and movement tracking."
		},
		{
			"name": "Inventory Management / Units",
			"item": [
				{
					"name": "Display a listing of units.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/units/catalog-all",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"units",
								"catalog-all"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/units/catalog-all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"units",
										"catalog-all"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/units/catalog-all could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Store a newly created unit.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":\"vmqeopfuudtdsufvyvddq\",\"code\":\"amniihfqcoynlazghdtqt\",\"symbol\":\"qxbajwbpi\",\"description\":\"Dolores dolorum amet iste laborum eius est dolor.\",\"decimal_places\":1,\"balance_unit\":\"piece\",\"custom_balance_unit\":\"tdsufvyvddqamniihfqco\",\"length\":85,\"width\":45,\"height\":40,\"quantity_factor\":1,\"second_unit\":\"liter\",\"custom_second_unit\":\"zghdtqtqxbajwbpilpmuf\",\"second_unit_contains\":\"inllwloauydlsmsjuryvo\",\"custom_second_unit_contains\":\"jcybzvrbyickznkygloig\",\"second_unit_content\":\"consequatur\",\"second_unit_item_number\":\"mqeopfuudtdsufvyvddqa\",\"third_unit\":\"liter\",\"custom_third_unit\":\"mniihfqcoynlazghdtqtq\",\"third_unit_contains\":\"xbajwbpilpmufinllwloa\",\"custom_third_unit_contains\":\"uydlsmsjuryvojcybzvrb\",\"third_unit_content\":\"consequatur\",\"third_unit_item_number\":\"mqeopfuudtdsufvyvddqa\",\"status\":\"inactive\"}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/units/define-unit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"units",
								"define-unit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Display the specified unit.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/units/review-unit/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"units",
								"review-unit",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the review unit."
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/units/review-unit/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"units",
										"review-unit",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "consequatur",
											"description": "The ID of the review unit."
										}
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/units/review-unit/consequatur could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Update the specified unit.",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":\"vmqeopfuudtdsufvyvddq\",\"code\":\"amniihfqcoynlazghdtqt\",\"symbol\":\"qxbajwbpi\",\"description\":\"Dolores dolorum amet iste laborum eius est dolor.\",\"decimal_places\":1,\"balance_unit\":\"carton\",\"custom_balance_unit\":\"tdsufvyvddqamniihfqco\",\"length\":85,\"width\":45,\"height\":40,\"quantity_factor\":1,\"second_unit\":\"piece\",\"custom_second_unit\":\"zghdtqtqxbajwbpilpmuf\",\"second_unit_contains\":\"inllwloauydlsmsjuryvo\",\"custom_second_unit_contains\":\"jcybzvrbyickznkygloig\",\"second_unit_content\":\"consequatur\",\"second_unit_item_number\":\"mqeopfuudtdsufvyvddqa\",\"third_unit\":\"piece\",\"custom_third_unit\":\"mniihfqcoynlazghdtqtq\",\"third_unit_contains\":\"xbajwbpilpmufinllwloa\",\"custom_third_unit_contains\":\"uydlsmsjuryvojcybzvrb\",\"third_unit_content\":\"consequatur\",\"third_unit_item_number\":\"mqeopfuudtdsufvyvddqa\",\"status\":\"inactive\"}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/units/revise-unit/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"units",
								"revise-unit",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the revise unit."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove the specified unit.",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/units/eliminate-unit/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"units",
								"eliminate-unit",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the eliminate unit."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get predefined unit options.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/units/unit-choices",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"units",
								"unit-choices"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/units/unit-choices",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"units",
										"unit-choices"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/units/unit-choices could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get all unit options including custom ones.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/units/comprehensive-choices",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"units",
								"comprehensive-choices"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/units/comprehensive-choices",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"units",
										"comprehensive-choices"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/units/comprehensive-choices could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get contains options.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/units/container-choices",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"units",
								"container-choices"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/units/container-choices",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"units",
										"container-choices"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/units/container-choices could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get units for dropdown selection.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/units/selection-dropdown",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"units",
								"selection-dropdown"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/units/selection-dropdown",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"units",
										"selection-dropdown"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/units/selection-dropdown could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get warehouses for dropdown selection.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/units/warehouse-selection",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"units",
								"warehouse-selection"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/units/warehouse-selection",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"units",
										"warehouse-selection"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/units/warehouse-selection could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get comprehensive unit data for form.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/units/form-configuration",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"units",
								"form-configuration"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/units/form-configuration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"units",
										"form-configuration"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/units/form-configuration could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get the first unit.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/units/initial-unit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"units",
								"initial-unit"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/units/initial-unit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"units",
										"initial-unit"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/units/initial-unit could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get the last unit.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/units/final-unit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"units",
								"final-unit"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/units/final-unit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"units",
										"final-unit"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/units/final-unit could not be found.\"\n}"
						}
					]
				}
			],
			"description": "\nAPIs for managing units of measure, including creation, updates, and unit conversions."
		},
		{
			"name": "Inventory Management / Warehouses",
			"item": [
				{
					"name": "Display a listing of warehouses.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/warehouses/scan-all",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"warehouses",
								"scan-all"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/warehouses/scan-all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"warehouses",
										"scan-all"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/warehouses/scan-all could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Store a newly created warehouse with all required fields.",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "3|6EeKVbgVSUoLw5AaFIOSsCaLHRskYO2du3bO48uW08f78905",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"warehouse_number\":\"vmqeopfuudtdsufvyvddq\",\"name\":\"amniihfqcoynlazghdtqt\",\"description\":\"Necessitatibus architecto aut consequatur debitis et id.\",\"address\":\"ilpmufinllwloauydlsms\",\r\n\"compaany_id\":1,\r\n\"warehouse_keeper_employee_number\":\"juryvojcybzvrbyickznk\",\"warehouse_keeper_employee_name\":\"ygloigmkwxphlvazjrcnf\",\"warehouse_keeper_id\":17,\"mobile\":\"mqeopfuudtdsufvyv\",\"fax_number\":\"ddqamniihfqcoynla\",\"phone_number\":\"zghdtqtqxbajwbpil\",\"sales_account_id\":17,\"purchase_account_id\":17,\"branch_id\":17,\"department_warehouse_id\":17,\"inventory_valuation_method\":\"first_purchase_price\",\"status\":\"active\"}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/warehouses/establish-facility",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"warehouses",
								"establish-facility"
							]
						}
					},
					"response": []
				},
				{
					"name": "Display the specified warehouse with comprehensive data (Review/Preview).",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/warehouses/inspect-facility/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"warehouses",
								"inspect-facility",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the inspect facility."
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/warehouses/inspect-facility/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"warehouses",
										"inspect-facility",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "consequatur",
											"description": "The ID of the inspect facility."
										}
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/warehouses/inspect-facility/consequatur could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Update the specified warehouse with full validation and field updates.",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":\"vmqeopfuudtdsufvyvddq\",\"code\":\"amniihfqcoynlazghdtqt\",\"location\":\"qxbajwbpilpmufinllwlo\",\"warehouse_keeper_employee_number\":\"auydlsmsjuryvojcybzvr\",\"warehouse_keeper_name\":\"byickznkygloigmkwxphl\",\"mobile\":\"vazjrcnfbaqywuxhgjjmz\",\"fax_number\":\"uxjubqouzswiwxtrkimfc\",\"phone_number\":\"atbxspzmrazsroyjpxmqe\",\"purchase_account\":\"sedyghenqcopwvownkbam\",\"sale_account\":\"lnfngefbeilfzsyuxoezb\",\"inventory_valuation_method\":\"second_purchase_price\",\"status\":\"active\"}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/warehouses/modify-facility/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"warehouses",
								"modify-facility",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the modify facility."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove the specified warehouse with soft delete.",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/warehouses/demolish-facility/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"warehouses",
								"demolish-facility",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the demolish facility."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get dropdown data for warehouse form.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/warehouses/configuration-data",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"warehouses",
								"configuration-data"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/warehouses/configuration-data",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"warehouses",
										"configuration-data"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/warehouses/configuration-data could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Filter warehouses by specific field value (Selection-Driven Display).",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/warehouses/filter-by-criteria",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"warehouses",
								"filter-by-criteria"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/warehouses/filter-by-criteria",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"warehouses",
										"filter-by-criteria"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/warehouses/filter-by-criteria could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get trashed warehouses (soft deleted).",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/warehouses/archived-facilities",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"warehouses",
								"archived-facilities"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/warehouses/archived-facilities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"warehouses",
										"archived-facilities"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/warehouses/archived-facilities could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get the first warehouse.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/warehouses/initial-facility",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"warehouses",
								"initial-facility"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/warehouses/initial-facility",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"warehouses",
										"initial-facility"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/warehouses/initial-facility could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get the last warehouse.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/warehouses/final-facility",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"warehouses",
								"final-facility"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/warehouses/final-facility",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"warehouses",
										"final-facility"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/warehouses/final-facility could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Restore a soft deleted warehouse.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/warehouses/:id/reactivate-facility",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"warehouses",
								":id",
								"reactivate-facility"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the warehouse."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Permanently delete a warehouse.",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/warehouses/:id/permanently-remove",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"warehouses",
								":id",
								"permanently-remove"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the warehouse."
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "\nAPIs for managing warehouses, including creation, updates, search, and warehouse operations."
		},
		{
			"name": "Project Management / Documents",
			"item": [
				{
					"name": "Display a listing of documents.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-documents/gather-all",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-documents",
								"gather-all"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-documents/gather-all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-documents",
										"gather-all"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-documents/gather-all could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Store a newly created document.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "project_id",
									"value": "consequatur",
									"description": "The <code>id</code> of an existing record in the projects table.",
									"type": "text"
								},
								{
									"key": "title",
									"value": "mqeopfuudtdsufvyvddqa",
									"description": "Must not be greater than 255 characters.",
									"type": "text"
								},
								{
									"key": "project_number",
									"value": "mniihfqcoynlazghdtqtq",
									"description": "Must not be greater than 100 characters.",
									"type": "text"
								},
								{
									"key": "project_name",
									"value": "xbajwbpilpmufinllwloa",
									"description": "Must not be greater than 255 characters.",
									"type": "text"
								},
								{
									"key": "description",
									"value": "A qui ducimus nihil laudantium nihil autem omnis.",
									"description": "Must not be greater than 2000 characters.",
									"type": "text"
								},
								{
									"key": "document_category",
									"value": "drawing",
									"type": "text"
								},
								{
									"key": "status",
									"value": "active",
									"type": "text"
								},
								{
									"key": "upload_date",
									"value": "2025-09-23T07:29:22",
									"description": "Must be a valid date.",
									"type": "text"
								},
								{
									"key": "version",
									"value": "ryvojcybzvrbyickz",
									"description": "Must not be greater than 20 characters.",
									"type": "text"
								},
								{
									"key": "file",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-documents/compose-new",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-documents",
								"compose-new"
							]
						}
					},
					"response": []
				},
				{
					"name": "Display the specified document.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-documents/read/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-documents",
								"read",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the read."
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-documents/read/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-documents",
										"read",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "consequatur",
											"description": "The ID of the read."
										}
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-documents/read/consequatur could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Update the specified document.",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-documents/amend/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-documents",
								"amend",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the amend."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove the specified document (soft delete).",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-documents/erase/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-documents",
								"erase",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the erase."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Download a document file.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-documents/:id/file-download",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-documents",
								":id",
								"file-download"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the project document."
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-documents/:id/file-download",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-documents",
										":id",
										"file-download"
									],
									"variable": [
										{
											"key": "id",
											"value": "consequatur",
											"description": "The ID of the project document."
										}
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-documents/consequatur/file-download could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Advanced search for documents.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-documents/advanced-search",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-documents",
								"advanced-search"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get documents by specific field value.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-documents/filter-by-field",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-documents",
								"filter-by-field"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-documents/filter-by-field",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-documents",
										"filter-by-field"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-documents/filter-by-field could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get unique values for a specific field.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-documents/field-values",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-documents",
								"field-values"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-documents/field-values",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-documents",
										"field-values"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-documents/field-values could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get sortable fields for documents.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-documents/sortable-fields",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-documents",
								"sortable-fields"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-documents/sortable-fields",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-documents",
										"sortable-fields"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-documents/sortable-fields could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Sort documents by specified field and order.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-documents/apply-sort",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-documents",
								"apply-sort"
							]
						}
					},
					"response": []
				},
				{
					"name": "Restore a soft-deleted document.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-documents/:id/restore-document",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-documents",
								":id",
								"restore-document"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the project document."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Permanently delete a document.",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-documents/:id/permanent-delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-documents",
								":id",
								"permanent-delete"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the project document."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get trashed documents.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-documents/deleted-documents",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-documents",
								"deleted-documents"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-documents/deleted-documents",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-documents",
										"deleted-documents"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-documents/deleted-documents could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get projects for dropdown (with project number and name).",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-documents/project-options",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-documents",
								"project-options"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-documents/project-options",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-documents",
										"project-options"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-documents/project-options could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get document category options.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-documents/category-options",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-documents",
								"category-options"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-documents/category-options",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-documents",
										"category-options"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-documents/category-options could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get document status options.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-documents/status-options",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-documents",
								"status-options"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-documents/status-options",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-documents",
										"status-options"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-documents/status-options could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Generate next document number for a project.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-documents/number-generation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-documents",
								"number-generation"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get documents for a specific project.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-documents/by-project/:projectId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-documents",
								"by-project",
								":projectId"
							],
							"variable": [
								{
									"key": "projectId",
									"value": "consequatur"
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-documents/by-project/:projectId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-documents",
										"by-project",
										":projectId"
									],
									"variable": [
										{
											"key": "projectId",
											"value": "consequatur"
										}
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-documents/by-project/consequatur could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get documents by category.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-documents/by-category/:category",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-documents",
								"by-category",
								":category"
							],
							"variable": [
								{
									"key": "category",
									"value": "consequatur"
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-documents/by-category/:category",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-documents",
										"by-category",
										":category"
									],
									"variable": [
										{
											"key": "category",
											"value": "consequatur"
										}
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-documents/by-category/consequatur could not be found.\"\n}"
						}
					]
				}
			],
			"description": "\nAPIs for managing project documents, including upload, download, categorization, and document lifecycle management."
		},
		{
			"name": "Project Management / Financials",
			"item": [
				{
					"name": "Display a listing of project financials.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-finance/obtain-all",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-finance",
								"obtain-all"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-finance/obtain-all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-finance",
										"obtain-all"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-finance/obtain-all could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Store a newly created project financial.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"project_id\":\"consequatur\",\"currency_id\":\"consequatur\",\"exchange_rate\":13,\"reference_type\":\"qeopfuudtdsufvyvddqam\",\"reference_id\":\"niihfqcoynlazghdtqtqx\",\"amount\":2,\"date\":\"2025-09-23T07:29:22\",\"description\":\"Consequatur debitis et id.\"}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-finance/register-new",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-finance",
								"register-new"
							]
						}
					},
					"response": []
				},
				{
					"name": "Display the specified project financial.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-finance/show/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-finance",
								"show",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the show."
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-finance/show/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-finance",
										"show",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "consequatur",
											"description": "The ID of the show."
										}
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-finance/show/consequatur could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Update the specified project financial.",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"exchange_rate\":21,\"reference_type\":\"mqeopfuudtdsufvyvddqa\",\"reference_id\":\"mniihfqcoynlazghdtqtq\",\"amount\":23,\"date\":\"2025-09-23T07:29:22\",\"description\":\"Aut consequatur debitis et.\"}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-finance/adjust/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-finance",
								"adjust",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the adjust."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove the specified project financial (soft delete).",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-finance/cancel/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-finance",
								"cancel",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the cancel."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Advanced search for project financials.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-finance/advanced-search",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-finance",
								"advanced-search"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get project financials by specific field.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-finance/filter-by-field",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-finance",
								"filter-by-field"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-finance/filter-by-field",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-finance",
										"filter-by-field"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-finance/filter-by-field could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get field values for dynamic selection.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-finance/field-values",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-finance",
								"field-values"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-finance/field-values",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-finance",
										"field-values"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-finance/field-values could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get sortable fields.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-finance/sortable-fields",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-finance",
								"sortable-fields"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-finance/sortable-fields",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-finance",
										"sortable-fields"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-finance/sortable-fields could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Sort project financials.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-finance/apply-sort",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-finance",
								"apply-sort"
							]
						}
					},
					"response": []
				},
				{
					"name": "Restore a soft-deleted project financial.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-finance/:id/restore-financial",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-finance",
								":id",
								"restore-financial"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the project finance."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Force delete a project financial.",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-finance/:id/permanent-delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-finance",
								":id",
								"permanent-delete"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the project finance."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get trashed project financials.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-finance/deleted-financials",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-finance",
								"deleted-financials"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-finance/deleted-financials",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-finance",
										"deleted-financials"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-finance/deleted-financials could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get projects for dropdown.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-finance/project-options",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-finance",
								"project-options"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-finance/project-options",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-finance",
										"project-options"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-finance/project-options could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get currencies for dropdown.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-finance/currency-options",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-finance",
								"currency-options"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-finance/currency-options",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-finance",
										"currency-options"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-finance/currency-options could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get project financials for a specific project.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-finance/by-project/:projectId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-finance",
								"by-project",
								":projectId"
							],
							"variable": [
								{
									"key": "projectId",
									"value": "consequatur"
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-finance/by-project/:projectId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-finance",
										"by-project",
										":projectId"
									],
									"variable": [
										{
											"key": "projectId",
											"value": "consequatur"
										}
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-finance/by-project/consequatur could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get project financials by reference type.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-finance/by-reference-type/:referenceType",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-finance",
								"by-reference-type",
								":referenceType"
							],
							"variable": [
								{
									"key": "referenceType",
									"value": "consequatur"
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-finance/by-reference-type/:referenceType",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-finance",
										"by-reference-type",
										":referenceType"
									],
									"variable": [
										{
											"key": "referenceType",
											"value": "consequatur"
										}
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-finance/by-reference-type/consequatur could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get project financials by date range.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-finance/by-date-range/:dateFrom/:dateTo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-finance",
								"by-date-range",
								":dateFrom",
								":dateTo"
							],
							"variable": [
								{
									"key": "dateFrom",
									"value": "consequatur"
								},
								{
									"key": "dateTo",
									"value": "consequatur"
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-finance/by-date-range/:dateFrom/:dateTo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-finance",
										"by-date-range",
										":dateFrom",
										":dateTo"
									],
									"variable": [
										{
											"key": "dateFrom",
											"value": "consequatur"
										},
										{
											"key": "dateTo",
											"value": "consequatur"
										}
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-finance/by-date-range/consequatur/consequatur could not be found.\"\n}"
						}
					]
				}
			],
			"description": "\nAPIs for managing project financials, including budget tracking, expenses, revenue, and financial reporting."
		},
		{
			"name": "Project Management / Milestones",
			"item": [
				{
					"name": "Display a listing of milestones.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-milestones/retrieve-all",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-milestones",
								"retrieve-all"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-milestones/retrieve-all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-milestones",
										"retrieve-all"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-milestones/retrieve-all could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Store a newly created milestone.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"project_id\":\"consequatur\",\"name\":\"mqeopfuudtdsufvyvddqa\",\"start_date\":\"2106-10-22\",\"status\":\"not_started\",\"milestone_number\":45,\"description\":\"Amet iste laborum eius est dolor dolores.\",\"end_date\":\"2106-10-22\",\"progress\":13,\"notes\":\"qeopfuudtdsufvyvddqam\"}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-milestones/build-new",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-milestones",
								"build-new"
							]
						}
					},
					"response": []
				},
				{
					"name": "Display the specified milestone.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-milestones/view-single/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-milestones",
								"view-single",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the view single."
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-milestones/view-single/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-milestones",
										"view-single",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "consequatur",
											"description": "The ID of the view single."
										}
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-milestones/view-single/consequatur could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Update the specified milestone.",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":\"vmqeopfuudtdsufvyvddq\",\"start_date\":\"2025-09-23T07:29:21\",\"status\":\"completed\",\"milestone_number\":2,\"description\":\"Molestias ipsam sit veniam sed fuga aspernatur.\",\"end_date\":\"2106-10-22\",\"progress\":13,\"notes\":\"qeopfuudtdsufvyvddqam\"}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-milestones/edit-record/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-milestones",
								"edit-record",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the edit record."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove the specified milestone (soft delete).",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-milestones/destroy-entry/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-milestones",
								"destroy-entry",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the destroy entry."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Advanced search for milestones.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-milestones/advanced-search",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-milestones",
								"advanced-search"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get milestones filtered by specific field value.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-milestones/filter-by-field",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-milestones",
								"filter-by-field"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-milestones/filter-by-field",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-milestones",
										"filter-by-field"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-milestones/filter-by-field could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get all field values for dropdown filtering.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-milestones/field-values",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-milestones",
								"field-values"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-milestones/field-values",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-milestones",
										"field-values"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-milestones/field-values could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get sortable fields list.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-milestones/sortable-fields",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-milestones",
								"sortable-fields"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-milestones/sortable-fields",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-milestones",
										"sortable-fields"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-milestones/sortable-fields could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Sort milestones by specified field and order.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-milestones/apply-sort",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-milestones",
								"apply-sort"
							]
						}
					},
					"response": []
				},
				{
					"name": "Restore a soft-deleted milestone.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-milestones/:id/restore-milestone",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-milestones",
								":id",
								"restore-milestone"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the project milestone."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Permanently delete a milestone.",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-milestones/:id/permanent-delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-milestones",
								":id",
								"permanent-delete"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the project milestone."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get trashed (soft-deleted) milestones.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-milestones/deleted-milestones",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-milestones",
								"deleted-milestones"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-milestones/deleted-milestones",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-milestones",
										"deleted-milestones"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-milestones/deleted-milestones could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get projects for dropdown (with project number and name).",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-milestones/project-options",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-milestones",
								"project-options"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-milestones/project-options",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-milestones",
										"project-options"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-milestones/project-options could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get milestone status options.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-milestones/status-options",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-milestones",
								"status-options"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-milestones/status-options",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-milestones",
										"status-options"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-milestones/status-options could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Generate next milestone number for a project.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-milestones/number-generation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-milestones",
								"number-generation"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get milestones for a specific project.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-milestones/by-project/:projectId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-milestones",
								"by-project",
								":projectId"
							],
							"variable": [
								{
									"key": "projectId",
									"value": "consequatur"
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-milestones/by-project/:projectId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-milestones",
										"by-project",
										":projectId"
									],
									"variable": [
										{
											"key": "projectId",
											"value": "consequatur"
										}
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-milestones/by-project/consequatur could not be found.\"\n}"
						}
					]
				}
			],
			"description": "\nAPIs for managing project milestones, including creation, updates, tracking, and milestone lifecycle management."
		},
		{
			"name": "Project Management / Projects",
			"item": [
				{
					"name": "List Projects",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/projects/browse-all?project_number=PRJ-001&project_name=Website+Development&customer_name=ABC+Company&status=active&project_manager_name=John+Doe&exact_date=2024-01-15&date_from=2024-01-01&date_to=2024-12-31&start_date_from=2024-01-01&start_date_to=2024-12-31&end_date_from=2024-01-01&end_date_to=2024-12-31&general_search=development&sort_field=created_at&sort_direction=desc&per_page=20",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"projects",
								"browse-all"
							],
							"query": [
								{
									"key": "project_number",
									"value": "PRJ-001",
									"description": "Filter by project number."
								},
								{
									"key": "project_name",
									"value": "Website+Development",
									"description": "Filter by project name."
								},
								{
									"key": "customer_name",
									"value": "ABC+Company",
									"description": "Filter by customer name."
								},
								{
									"key": "status",
									"value": "active",
									"description": "Filter by project status."
								},
								{
									"key": "project_manager_name",
									"value": "John+Doe",
									"description": "Filter by project manager name."
								},
								{
									"key": "exact_date",
									"value": "2024-01-15",
									"description": "Filter by exact date (Y-m-d format)."
								},
								{
									"key": "date_from",
									"value": "2024-01-01",
									"description": "Filter projects from this date (Y-m-d format)."
								},
								{
									"key": "date_to",
									"value": "2024-12-31",
									"description": "Filter projects to this date (Y-m-d format)."
								},
								{
									"key": "start_date_from",
									"value": "2024-01-01",
									"description": "Filter by start date from (Y-m-d format)."
								},
								{
									"key": "start_date_to",
									"value": "2024-12-31",
									"description": "Filter by start date to (Y-m-d format)."
								},
								{
									"key": "end_date_from",
									"value": "2024-01-01",
									"description": "Filter by end date from (Y-m-d format)."
								},
								{
									"key": "end_date_to",
									"value": "2024-12-31",
									"description": "Filter by end date to (Y-m-d format)."
								},
								{
									"key": "general_search",
									"value": "development",
									"description": "General search across multiple fields."
								},
								{
									"key": "sort_field",
									"value": "created_at",
									"description": "Field to sort by."
								},
								{
									"key": "sort_direction",
									"value": "desc",
									"description": "Sort direction (asc/desc)."
								},
								{
									"key": "per_page",
									"value": "20",
									"description": "Number of items per page (default: 15)."
								}
							]
						},
						"description": "Retrieve a paginated list of projects with advanced search and filtering capabilities."
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/projects/browse-all?project_number=PRJ-001&project_name=Website+Development&customer_name=ABC+Company&status=active&project_manager_name=John+Doe&exact_date=2024-01-15&date_from=2024-01-01&date_to=2024-12-31&start_date_from=2024-01-01&start_date_to=2024-12-31&end_date_from=2024-01-01&end_date_to=2024-12-31&general_search=development&sort_field=created_at&sort_direction=desc&per_page=20",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"projects",
										"browse-all"
									],
									"query": [
										{
											"key": "project_number",
											"value": "PRJ-001",
											"description": "Filter by project number."
										},
										{
											"key": "project_name",
											"value": "Website+Development",
											"description": "Filter by project name."
										},
										{
											"key": "customer_name",
											"value": "ABC+Company",
											"description": "Filter by customer name."
										},
										{
											"key": "status",
											"value": "active",
											"description": "Filter by project status."
										},
										{
											"key": "project_manager_name",
											"value": "John+Doe",
											"description": "Filter by project manager name."
										},
										{
											"key": "exact_date",
											"value": "2024-01-15",
											"description": "Filter by exact date (Y-m-d format)."
										},
										{
											"key": "date_from",
											"value": "2024-01-01",
											"description": "Filter projects from this date (Y-m-d format)."
										},
										{
											"key": "date_to",
											"value": "2024-12-31",
											"description": "Filter projects to this date (Y-m-d format)."
										},
										{
											"key": "start_date_from",
											"value": "2024-01-01",
											"description": "Filter by start date from (Y-m-d format)."
										},
										{
											"key": "start_date_to",
											"value": "2024-12-31",
											"description": "Filter by start date to (Y-m-d format)."
										},
										{
											"key": "end_date_from",
											"value": "2024-01-01",
											"description": "Filter by end date from (Y-m-d format)."
										},
										{
											"key": "end_date_to",
											"value": "2024-12-31",
											"description": "Filter by end date to (Y-m-d format)."
										},
										{
											"key": "general_search",
											"value": "development",
											"description": "General search across multiple fields."
										},
										{
											"key": "sort_field",
											"value": "created_at",
											"description": "Field to sort by."
										},
										{
											"key": "sort_direction",
											"value": "desc",
											"description": "Sort direction (asc/desc)."
										},
										{
											"key": "per_page",
											"value": "20",
											"description": "Number of items per page (default: 15)."
										}
									]
								},
								"description": "Retrieve a paginated list of projects with advanced search and filtering capabilities."
							},
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"project_number\": \"PRJ-001\",\n      \"project_name\": \"Website Development\",\n      \"customer_name\": \"ABC Company\",\n      \"status\": \"active\",\n      \"project_manager_name\": \"John Doe\",\n      \"start_date\": \"2024-01-01\",\n      \"end_date\": \"2024-06-30\",\n      \"created_at\": \"2024-01-01T00:00:00.000000Z\"\n    }\n  ],\n  \"filters_applied\": {},\n  \"message\": \"Projects retrieved successfully\"\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/projects/browse-all?project_number=PRJ-001&project_name=Website+Development&customer_name=ABC+Company&status=active&project_manager_name=John+Doe&exact_date=2024-01-15&date_from=2024-01-01&date_to=2024-12-31&start_date_from=2024-01-01&start_date_to=2024-12-31&end_date_from=2024-01-01&end_date_to=2024-12-31&general_search=development&sort_field=created_at&sort_direction=desc&per_page=20",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"projects",
										"browse-all"
									],
									"query": [
										{
											"key": "project_number",
											"value": "PRJ-001",
											"description": "Filter by project number."
										},
										{
											"key": "project_name",
											"value": "Website+Development",
											"description": "Filter by project name."
										},
										{
											"key": "customer_name",
											"value": "ABC+Company",
											"description": "Filter by customer name."
										},
										{
											"key": "status",
											"value": "active",
											"description": "Filter by project status."
										},
										{
											"key": "project_manager_name",
											"value": "John+Doe",
											"description": "Filter by project manager name."
										},
										{
											"key": "exact_date",
											"value": "2024-01-15",
											"description": "Filter by exact date (Y-m-d format)."
										},
										{
											"key": "date_from",
											"value": "2024-01-01",
											"description": "Filter projects from this date (Y-m-d format)."
										},
										{
											"key": "date_to",
											"value": "2024-12-31",
											"description": "Filter projects to this date (Y-m-d format)."
										},
										{
											"key": "start_date_from",
											"value": "2024-01-01",
											"description": "Filter by start date from (Y-m-d format)."
										},
										{
											"key": "start_date_to",
											"value": "2024-12-31",
											"description": "Filter by start date to (Y-m-d format)."
										},
										{
											"key": "end_date_from",
											"value": "2024-01-01",
											"description": "Filter by end date from (Y-m-d format)."
										},
										{
											"key": "end_date_to",
											"value": "2024-12-31",
											"description": "Filter by end date to (Y-m-d format)."
										},
										{
											"key": "general_search",
											"value": "development",
											"description": "General search across multiple fields."
										},
										{
											"key": "sort_field",
											"value": "created_at",
											"description": "Field to sort by."
										},
										{
											"key": "sort_direction",
											"value": "desc",
											"description": "Sort direction (asc/desc)."
										},
										{
											"key": "per_page",
											"value": "20",
											"description": "Number of items per page (default: 15)."
										}
									]
								},
								"description": "Retrieve a paginated list of projects with advanced search and filtering capabilities."
							},
							"code": 500,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"message\": \"Error retrieving projects: Database connection failed\"\n}"
						}
					]
				},
				{
					"name": "Create Project",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"company_id\":\"consequatur\",\"branch_id\":\"consequatur\",\"fiscal_year_id\":\"consequatur\",\"cost_center_id\":\"consequatur\",\"customer_id\":\"consequatur\",\"currency_id\":\"consequatur\",\"currency_price\":45,\"include_vat\":true,\"project_number\":\"PRJ-001\",\"name\":\"niihfqcoynlazghdtqtqx\",\"description\":\"Complete website redesign and development\",\"project_value\":12,\"manager_id\":\"consequatur\",\"project_manager_name\":\"John Doe\",\"start_date\":\"2024-01-01\",\"end_date\":\"2024-06-30\",\"status\":\"active\",\"country_id\":\"consequatur\",\"notes\":\"consequatur\",\"customer_name\":\"ABC Company\",\"customer_email\":\"eloisa.harber@example.com\",\"customer_phone\":\"fqcoynlazghdtqtqx\",\"licensed_operator\":\"bajwbpilpmufinllwloau\",\"project_name\":\"Website Development\",\"budget\":\"50000.00\"}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/projects/establish-new",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"projects",
								"establish-new"
							]
						},
						"description": "Create a new project with the provided details."
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"company_id\":\"consequatur\",\"branch_id\":\"consequatur\",\"fiscal_year_id\":\"consequatur\",\"cost_center_id\":\"consequatur\",\"customer_id\":\"consequatur\",\"currency_id\":\"consequatur\",\"currency_price\":45,\"include_vat\":true,\"project_number\":\"PRJ-001\",\"name\":\"niihfqcoynlazghdtqtqx\",\"description\":\"Complete website redesign and development\",\"project_value\":12,\"manager_id\":\"consequatur\",\"project_manager_name\":\"John Doe\",\"start_date\":\"2024-01-01\",\"end_date\":\"2024-06-30\",\"status\":\"active\",\"country_id\":\"consequatur\",\"notes\":\"consequatur\",\"customer_name\":\"ABC Company\",\"customer_email\":\"eloisa.harber@example.com\",\"customer_phone\":\"fqcoynlazghdtqtqx\",\"licensed_operator\":\"bajwbpilpmufinllwloau\",\"project_name\":\"Website Development\",\"budget\":\"50000.00\"}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/projects/establish-new",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"projects",
										"establish-new"
									]
								},
								"description": "Create a new project with the provided details."
							},
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"project_number\": \"PRJ-001\",\n    \"project_name\": \"Website Development\",\n    \"customer_name\": \"ABC Company\",\n    \"status\": \"active\",\n    \"project_manager_name\": \"John Doe\",\n    \"start_date\": \"2024-01-01\",\n    \"end_date\": \"2024-06-30\",\n    \"created_at\": \"2024-01-01T00:00:00.000000Z\"\n  },\n  \"message\": \"Project created successfully\"\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"company_id\":\"consequatur\",\"branch_id\":\"consequatur\",\"fiscal_year_id\":\"consequatur\",\"cost_center_id\":\"consequatur\",\"customer_id\":\"consequatur\",\"currency_id\":\"consequatur\",\"currency_price\":45,\"include_vat\":true,\"project_number\":\"PRJ-001\",\"name\":\"niihfqcoynlazghdtqtqx\",\"description\":\"Complete website redesign and development\",\"project_value\":12,\"manager_id\":\"consequatur\",\"project_manager_name\":\"John Doe\",\"start_date\":\"2024-01-01\",\"end_date\":\"2024-06-30\",\"status\":\"active\",\"country_id\":\"consequatur\",\"notes\":\"consequatur\",\"customer_name\":\"ABC Company\",\"customer_email\":\"eloisa.harber@example.com\",\"customer_phone\":\"fqcoynlazghdtqtqx\",\"licensed_operator\":\"bajwbpilpmufinllwloau\",\"project_name\":\"Website Development\",\"budget\":\"50000.00\"}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/projects/establish-new",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"projects",
										"establish-new"
									]
								},
								"description": "Create a new project with the provided details."
							},
							"code": 422,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"message\": \"Validation failed\",\n  \"errors\": {\n    \"project_name\": [\"The project name field is required.\"]\n  }\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"company_id\":\"consequatur\",\"branch_id\":\"consequatur\",\"fiscal_year_id\":\"consequatur\",\"cost_center_id\":\"consequatur\",\"customer_id\":\"consequatur\",\"currency_id\":\"consequatur\",\"currency_price\":45,\"include_vat\":true,\"project_number\":\"PRJ-001\",\"name\":\"niihfqcoynlazghdtqtqx\",\"description\":\"Complete website redesign and development\",\"project_value\":12,\"manager_id\":\"consequatur\",\"project_manager_name\":\"John Doe\",\"start_date\":\"2024-01-01\",\"end_date\":\"2024-06-30\",\"status\":\"active\",\"country_id\":\"consequatur\",\"notes\":\"consequatur\",\"customer_name\":\"ABC Company\",\"customer_email\":\"eloisa.harber@example.com\",\"customer_phone\":\"fqcoynlazghdtqtqx\",\"licensed_operator\":\"bajwbpilpmufinllwloau\",\"project_name\":\"Website Development\",\"budget\":\"50000.00\"}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/projects/establish-new",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"projects",
										"establish-new"
									]
								},
								"description": "Create a new project with the provided details."
							},
							"code": 500,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"message\": \"Error creating project: Database connection failed\"\n}"
						}
					]
				},
				{
					"name": "Show the specified resource with comprehensive data.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/projects/examine/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"projects",
								"examine",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the examine."
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/projects/examine/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"projects",
										"examine",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "consequatur",
											"description": "The ID of the examine."
										}
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/projects/examine/consequatur could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Update the specified resource in storage.",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"currency_price\":73,\"include_vat\":false,\"project_number\":\"mqeopfuudtdsufvyvddqa\",\"name\":\"mniihfqcoynlazghdtqtq\",\"description\":\"Dolores dolorum amet iste laborum eius est dolor.\",\"project_value\":12,\"project_manager_name\":\"tdsufvyvddqamniihfqco\",\"start_date\":\"2025-09-23T07:29:20\",\"end_date\":\"2106-10-22\",\"status\":\"on-hold\",\"notes\":\"consequatur\",\"customer_name\":\"mqeopfuudtdsufvyvddqa\",\"customer_email\":\"eloisa.harber@example.com\",\"customer_phone\":\"fqcoynlazghdtqtqx\",\"licensed_operator\":\"bajwbpilpmufinllwloau\",\"budget\":87,\"actual_cost\":13,\"progress\":12}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/projects/revise/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"projects",
								"revise",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the revise."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a project (soft delete)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/projects/eliminate/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"projects",
								"eliminate",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the eliminate."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Advanced search for projects",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/projects/advanced-search",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"projects",
								"advanced-search"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get projects by specific field value for dynamic selection display",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/projects/filter-by-field",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"projects",
								"filter-by-field"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/projects/filter-by-field",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"projects",
										"filter-by-field"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/projects/filter-by-field could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get unique values for a specific field for dropdown/selection",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/projects/field-values",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"projects",
								"field-values"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/projects/field-values",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"projects",
										"field-values"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/projects/field-values could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get sortable fields for projects",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/projects/sortable-fields",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"projects",
								"sortable-fields"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/projects/sortable-fields",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"projects",
										"sortable-fields"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/projects/sortable-fields could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Sort projects by specific field with first/last functionality",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/projects/apply-sort",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"projects",
								"apply-sort"
							]
						}
					},
					"response": []
				},
				{
					"name": "Restore a soft-deleted project",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/projects/:id/restore-project",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"projects",
								":id",
								"restore-project"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the project."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Permanently delete a project (force delete)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/projects/:id/permanent-delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"projects",
								":id",
								"permanent-delete"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the project."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get trashed (soft-deleted) projects",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/projects/deleted-projects",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"projects",
								"deleted-projects"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/projects/deleted-projects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"projects",
										"deleted-projects"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/projects/deleted-projects could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get all customers for dropdown",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/projects/customer-options",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"projects",
								"customer-options"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/projects/customer-options",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"projects",
										"customer-options"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/projects/customer-options could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get customer data when customer is selected",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/projects/customer-details/:customerId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"projects",
								"customer-details",
								":customerId"
							],
							"variable": [
								{
									"key": "customerId",
									"value": "consequatur"
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/projects/customer-details/:customerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"projects",
										"customer-details",
										":customerId"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "consequatur"
										}
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/projects/customer-details/consequatur could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get all currencies for dropdown",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/projects/currency-options",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"projects",
								"currency-options"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/projects/currency-options",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"projects",
										"currency-options"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/projects/currency-options could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get all employees/users for project manager dropdown",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/projects/employee-options",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"projects",
								"employee-options"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/projects/employee-options",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"projects",
										"employee-options"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/projects/employee-options could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get all countries for dropdown",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/projects/country-options",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"projects",
								"country-options"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/projects/country-options",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"projects",
										"country-options"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/projects/country-options could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get project statuses for dropdown",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/projects/status-options",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"projects",
								"status-options"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/projects/status-options",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"projects",
										"status-options"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/projects/status-options could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Calculate VAT for given price and company",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/projects/vat-calculation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"projects",
								"vat-calculation"
							]
						}
					},
					"response": []
				},
				{
					"name": "Generate next project code",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/projects/code-generation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"projects",
								"code-generation"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/projects/code-generation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"projects",
										"code-generation"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/projects/code-generation could not be found.\"\n}"
						}
					]
				}
			],
			"description": "\nAPIs for managing projects, including creation, updates, search, and project lifecycle management."
		},
		{
			"name": "Project Management / Resources",
			"item": [
				{
					"name": "List Project Resources",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-resources/load-all?project_id=1&supplier_id=1&resource_type=material&status=allocated&supplier_number=SUP-001&supplier_name=ABC+Supplier&project_number=PRJ-001&project_name=Website+Development&allocation_from=1000.00&allocation_to=5000.00&date_from=2024-01-01&date_to=2024-12-31&sort_field=created_at&sort_direction=desc&per_page=20",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-resources",
								"load-all"
							],
							"query": [
								{
									"key": "project_id",
									"value": "1",
									"description": "Filter by project ID."
								},
								{
									"key": "supplier_id",
									"value": "1",
									"description": "Filter by supplier ID."
								},
								{
									"key": "resource_type",
									"value": "material",
									"description": "Filter by resource type."
								},
								{
									"key": "status",
									"value": "allocated",
									"description": "Filter by resource status."
								},
								{
									"key": "supplier_number",
									"value": "SUP-001",
									"description": "Search by supplier number."
								},
								{
									"key": "supplier_name",
									"value": "ABC+Supplier",
									"description": "Search by supplier name."
								},
								{
									"key": "project_number",
									"value": "PRJ-001",
									"description": "Search by project number."
								},
								{
									"key": "project_name",
									"value": "Website+Development",
									"description": "Search by project name."
								},
								{
									"key": "allocation_from",
									"value": "1000.00",
									"description": "numeric Filter resources with allocation from this value."
								},
								{
									"key": "allocation_to",
									"value": "5000.00",
									"description": "numeric Filter resources with allocation to this value."
								},
								{
									"key": "date_from",
									"value": "2024-01-01",
									"description": "Filter by date from (Y-m-d format)."
								},
								{
									"key": "date_to",
									"value": "2024-12-31",
									"description": "Filter by date to (Y-m-d format)."
								},
								{
									"key": "sort_field",
									"value": "created_at",
									"description": "Field to sort by."
								},
								{
									"key": "sort_direction",
									"value": "desc",
									"description": "Sort direction (asc/desc)."
								},
								{
									"key": "per_page",
									"value": "20",
									"description": "Number of items per page (default: 15)."
								}
							]
						},
						"description": "Retrieve a paginated list of project resources with comprehensive filtering and search capabilities."
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-resources/load-all?project_id=1&supplier_id=1&resource_type=material&status=allocated&supplier_number=SUP-001&supplier_name=ABC+Supplier&project_number=PRJ-001&project_name=Website+Development&allocation_from=1000.00&allocation_to=5000.00&date_from=2024-01-01&date_to=2024-12-31&sort_field=created_at&sort_direction=desc&per_page=20",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-resources",
										"load-all"
									],
									"query": [
										{
											"key": "project_id",
											"value": "1",
											"description": "Filter by project ID."
										},
										{
											"key": "supplier_id",
											"value": "1",
											"description": "Filter by supplier ID."
										},
										{
											"key": "resource_type",
											"value": "material",
											"description": "Filter by resource type."
										},
										{
											"key": "status",
											"value": "allocated",
											"description": "Filter by resource status."
										},
										{
											"key": "supplier_number",
											"value": "SUP-001",
											"description": "Search by supplier number."
										},
										{
											"key": "supplier_name",
											"value": "ABC+Supplier",
											"description": "Search by supplier name."
										},
										{
											"key": "project_number",
											"value": "PRJ-001",
											"description": "Search by project number."
										},
										{
											"key": "project_name",
											"value": "Website+Development",
											"description": "Search by project name."
										},
										{
											"key": "allocation_from",
											"value": "1000.00",
											"description": "numeric Filter resources with allocation from this value."
										},
										{
											"key": "allocation_to",
											"value": "5000.00",
											"description": "numeric Filter resources with allocation to this value."
										},
										{
											"key": "date_from",
											"value": "2024-01-01",
											"description": "Filter by date from (Y-m-d format)."
										},
										{
											"key": "date_to",
											"value": "2024-12-31",
											"description": "Filter by date to (Y-m-d format)."
										},
										{
											"key": "sort_field",
											"value": "created_at",
											"description": "Field to sort by."
										},
										{
											"key": "sort_direction",
											"value": "desc",
											"description": "Sort direction (asc/desc)."
										},
										{
											"key": "per_page",
											"value": "20",
											"description": "Number of items per page (default: 15)."
										}
									]
								},
								"description": "Retrieve a paginated list of project resources with comprehensive filtering and search capabilities."
							},
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\n  \"success\": true,\n  \"data\": [\n    {\n      \"id\": 1,\n      \"project\": {\n        \"id\": 1,\n        \"project_number\": \"PRJ-001\",\n        \"project_name\": \"Website Development\"\n      },\n      \"supplier\": {\n        \"id\": 1,\n        \"supplier_number\": \"SUP-001\",\n        \"supplier_name\": \"ABC Supplier\"\n      },\n      \"resource_type\": \"material\",\n      \"allocation\": 2500.00,\n      \"status\": \"allocated\",\n      \"created_at\": \"2024-01-01T00:00:00.000000Z\"\n    }\n  ],\n  \"message\": \"Resources retrieved successfully\"\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-resources/load-all?project_id=1&supplier_id=1&resource_type=material&status=allocated&supplier_number=SUP-001&supplier_name=ABC+Supplier&project_number=PRJ-001&project_name=Website+Development&allocation_from=1000.00&allocation_to=5000.00&date_from=2024-01-01&date_to=2024-12-31&sort_field=created_at&sort_direction=desc&per_page=20",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-resources",
										"load-all"
									],
									"query": [
										{
											"key": "project_id",
											"value": "1",
											"description": "Filter by project ID."
										},
										{
											"key": "supplier_id",
											"value": "1",
											"description": "Filter by supplier ID."
										},
										{
											"key": "resource_type",
											"value": "material",
											"description": "Filter by resource type."
										},
										{
											"key": "status",
											"value": "allocated",
											"description": "Filter by resource status."
										},
										{
											"key": "supplier_number",
											"value": "SUP-001",
											"description": "Search by supplier number."
										},
										{
											"key": "supplier_name",
											"value": "ABC+Supplier",
											"description": "Search by supplier name."
										},
										{
											"key": "project_number",
											"value": "PRJ-001",
											"description": "Search by project number."
										},
										{
											"key": "project_name",
											"value": "Website+Development",
											"description": "Search by project name."
										},
										{
											"key": "allocation_from",
											"value": "1000.00",
											"description": "numeric Filter resources with allocation from this value."
										},
										{
											"key": "allocation_to",
											"value": "5000.00",
											"description": "numeric Filter resources with allocation to this value."
										},
										{
											"key": "date_from",
											"value": "2024-01-01",
											"description": "Filter by date from (Y-m-d format)."
										},
										{
											"key": "date_to",
											"value": "2024-12-31",
											"description": "Filter by date to (Y-m-d format)."
										},
										{
											"key": "sort_field",
											"value": "created_at",
											"description": "Field to sort by."
										},
										{
											"key": "sort_direction",
											"value": "desc",
											"description": "Sort direction (asc/desc)."
										},
										{
											"key": "per_page",
											"value": "20",
											"description": "Number of items per page (default: 15)."
										}
									]
								},
								"description": "Retrieve a paginated list of project resources with comprehensive filtering and search capabilities."
							},
							"code": 500,
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\n  \"success\": false,\n  \"message\": \"Error retrieving resources: Database connection failed\"\n}"
						}
					]
				},
				{
					"name": "Store a newly created resource.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"project_id\":\"consequatur\",\"supplier_id\":\"consequatur\",\"role\":\"mqeopfuudtdsufvyvddqa\",\"resource_type\":\"consultant\",\"supplier_number\":\"mniihfqcoynlazghdtqtq\",\"supplier_name\":\"xbajwbpilpmufinllwloa\",\"project_number\":\"uydlsmsjuryvojcybzvrb\",\"project_name\":\"yickznkygloigmkwxphlv\",\"allocation_percentage\":1,\"allocation_value\":87,\"notes\":\"jrcnfbaqywuxhgjjmzuxj\",\"status\":\"completed\",\"allocation\":\"ubqouzswiwxtrkimfcatb\"}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-resources/construct-new",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-resources",
								"construct-new"
							]
						}
					},
					"response": []
				},
				{
					"name": "Display the specified resource.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-resources/display/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-resources",
								"display",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the display."
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-resources/display/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-resources",
										"display",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "consequatur",
											"description": "The ID of the display."
										}
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-resources/display/consequatur could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Update the specified resource.",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"role\":\"vmqeopfuudtdsufvyvddq\",\"resource_type\":\"internal\",\"supplier_number\":\"amniihfqcoynlazghdtqt\",\"supplier_name\":\"qxbajwbpilpmufinllwlo\",\"project_number\":\"auydlsmsjuryvojcybzvr\",\"project_name\":\"byickznkygloigmkwxphl\",\"allocation_percentage\":22,\"allocation_value\":0,\"notes\":\"zjrcnfbaqywuxhgjjmzux\",\"status\":\"inactive\",\"allocation\":\"jubqouzswiwxtrkimfcat\"}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-resources/alter/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-resources",
								"alter",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the alter."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove the specified resource (soft delete).",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-resources/purge/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-resources",
								"purge",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the purge."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Advanced search for resources.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-resources/advanced-search",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-resources",
								"advanced-search"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get resources by specific field value.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-resources/filter-by-field",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-resources",
								"filter-by-field"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-resources/filter-by-field",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-resources",
										"filter-by-field"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-resources/filter-by-field could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get unique values for a specific field.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-resources/field-values",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-resources",
								"field-values"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-resources/field-values",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-resources",
										"field-values"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-resources/field-values could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get sortable fields for resources.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-resources/sortable-fields",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-resources",
								"sortable-fields"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-resources/sortable-fields",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-resources",
										"sortable-fields"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-resources/sortable-fields could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Sort resources by specified field and order.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-resources/apply-sort",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-resources",
								"apply-sort"
							]
						}
					},
					"response": []
				},
				{
					"name": "Restore a soft-deleted resource.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-resources/:id/restore-resource",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-resources",
								":id",
								"restore-resource"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the project resource."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Permanently delete a resource.",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-resources/:id/permanent-delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-resources",
								":id",
								"permanent-delete"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the project resource."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get trashed (soft-deleted) resources.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-resources/deleted-resources",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-resources",
								"deleted-resources"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-resources/deleted-resources",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-resources",
										"deleted-resources"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-resources/deleted-resources could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get suppliers for dropdown (with supplier number and name).",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-resources/supplier-options",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-resources",
								"supplier-options"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-resources/supplier-options",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-resources",
										"supplier-options"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-resources/supplier-options could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get projects for dropdown (with project number and name).",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-resources/project-options",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-resources",
								"project-options"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-resources/project-options",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-resources",
										"project-options"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-resources/project-options could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get resource type options.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-resources/type-options",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-resources",
								"type-options"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-resources/type-options",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-resources",
										"type-options"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-resources/type-options could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get resource status options.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-resources/status-options",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-resources",
								"status-options"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-resources/status-options",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-resources",
										"status-options"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-resources/status-options could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Calculate allocation based on project value and percentage.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-resources/allocation-calculation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-resources",
								"allocation-calculation"
							]
						}
					},
					"response": []
				},
				{
					"name": "Calculate allocation percentage based on project value and allocation value.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-resources/percentage-calculation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-resources",
								"percentage-calculation"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get resources for a specific project.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-resources/by-project/:projectId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-resources",
								"by-project",
								":projectId"
							],
							"variable": [
								{
									"key": "projectId",
									"value": "consequatur"
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-resources/by-project/:projectId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-resources",
										"by-project",
										":projectId"
									],
									"variable": [
										{
											"key": "projectId",
											"value": "consequatur"
										}
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-resources/by-project/consequatur could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get resources for a specific supplier.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-resources/by-supplier/:supplierId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-resources",
								"by-supplier",
								":supplierId"
							],
							"variable": [
								{
									"key": "supplierId",
									"value": "consequatur"
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-resources/by-supplier/:supplierId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-resources",
										"by-supplier",
										":supplierId"
									],
									"variable": [
										{
											"key": "supplierId",
											"value": "consequatur"
										}
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-resources/by-supplier/consequatur could not be found.\"\n}"
						}
					]
				}
			],
			"description": "\nAPIs for managing project resources, including supplier allocation, resource tracking, and allocation calculations."
		},
		{
			"name": "Project Management / Risks",
			"item": [
				{
					"name": "Get project risk statistics and summary data.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-risk-management/risk-statistics",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-risk-management",
								"risk-statistics"
							]
						},
						"description": "Can be filtered by project_id if provided."
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-risk-management/risk-statistics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-risk-management",
										"risk-statistics"
									]
								},
								"description": "Can be filtered by project_id if provided."
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-risk-management/risk-statistics could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Display a listing of project risks.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-risk-management/collect-all",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-risk-management",
								"collect-all"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-risk-management/collect-all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-risk-management",
										"collect-all"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-risk-management/collect-all could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Store a newly created project risk.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"project_id\":17,\"title\":\"mqeopfuudtdsufvyvddqamniihfqcoynlazghdtqtqxbajwbpilpmufinllwloauydlsmsjury\",\"description\":\"Natus ex dicta hic inventore asperiores illum est.\",\"impact\":\"medium\",\"probability\":\"high\",\"mitigation_plan\":\"byickznkygloigmkwxphl\",\"status\":\"open\",\"assigned_to\":17}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-risk-management/formulate-new",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-risk-management",
								"formulate-new"
							]
						}
					},
					"response": []
				},
				{
					"name": "Display the specified project risk.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-risk-management/present/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-risk-management",
								"present",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the present."
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-risk-management/present/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-risk-management",
										"present",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "consequatur",
											"description": "The ID of the present."
										}
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-risk-management/present/consequatur could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Update the specified project risk.",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"project_id\":17,\"title\":\"mqeopfuudtdsufvyvddqamniihfqcoynlazghdtqtqxbajwbpilpmufinllwloauydlsmsjury\",\"description\":\"Natus ex dicta hic inventore asperiores illum est.\",\"impact\":\"low\",\"probability\":\"medium\",\"mitigation_plan\":\"byickznkygloigmkwxphl\",\"status\":\"open\",\"assigned_to\":17}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-risk-management/modify-existing/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-risk-management",
								"modify-existing",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the modify existing."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove the specified project risk (soft delete).",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-risk-management/terminate/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-risk-management",
								"terminate",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the terminate."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Advanced search for project risks.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-risk-management/advanced-search",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-risk-management",
								"advanced-search"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get project risks filtered by specific field.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-risk-management/filter-by-field",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-risk-management",
								"filter-by-field"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-risk-management/filter-by-field",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-risk-management",
										"filter-by-field"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-risk-management/filter-by-field could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get field values for dropdown filtering.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-risk-management/field-values",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-risk-management",
								"field-values"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-risk-management/field-values",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-risk-management",
										"field-values"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-risk-management/field-values could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get sortable fields for project risks.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-risk-management/sortable-fields",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-risk-management",
								"sortable-fields"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-risk-management/sortable-fields",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-risk-management",
										"sortable-fields"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-risk-management/sortable-fields could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Sort project risks by specified field and direction.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-risk-management/apply-sort",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-risk-management",
								"apply-sort"
							]
						}
					},
					"response": []
				},
				{
					"name": "Restore a soft-deleted project risk.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-risk-management/:id/restore-risk",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-risk-management",
								":id",
								"restore-risk"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the project risk management."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Permanently delete a project risk.",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-risk-management/:id/permanent-delete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-risk-management",
								":id",
								"permanent-delete"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the project risk management."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get trashed (soft-deleted) project risks.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-risk-management/deleted-risks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-risk-management",
								"deleted-risks"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-risk-management/deleted-risks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-risk-management",
										"deleted-risks"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-risk-management/deleted-risks could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get projects for dropdown with bidirectional linking.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-risk-management/project-options",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-risk-management",
								"project-options"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-risk-management/project-options",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-risk-management",
										"project-options"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-risk-management/project-options could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get employees for dropdown.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-risk-management/employee-options",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-risk-management",
								"employee-options"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-risk-management/employee-options",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-risk-management",
										"employee-options"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-risk-management/employee-options could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get impact options for dropdown.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-risk-management/impact-options",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-risk-management",
								"impact-options"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-risk-management/impact-options",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-risk-management",
										"impact-options"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-risk-management/impact-options could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get probability options for dropdown.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-risk-management/probability-options",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-risk-management",
								"probability-options"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-risk-management/probability-options",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-risk-management",
										"probability-options"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-risk-management/probability-options could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get status options for dropdown.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-risk-management/status-options",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-risk-management",
								"status-options"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-risk-management/status-options",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-risk-management",
										"status-options"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-risk-management/status-options could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get project risks by specific project.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-risk-management/by-project/:projectId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-risk-management",
								"by-project",
								":projectId"
							],
							"variable": [
								{
									"key": "projectId",
									"value": "consequatur"
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-risk-management/by-project/:projectId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-risk-management",
										"by-project",
										":projectId"
									],
									"variable": [
										{
											"key": "projectId",
											"value": "consequatur"
										}
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-risk-management/by-project/consequatur could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get project risks by status.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-risk-management/by-status/:status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-risk-management",
								"by-status",
								":status"
							],
							"variable": [
								{
									"key": "status",
									"value": "consequatur"
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-risk-management/by-status/:status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-risk-management",
										"by-status",
										":status"
									],
									"variable": [
										{
											"key": "status",
											"value": "consequatur"
										}
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-risk-management/by-status/consequatur could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get project risks by impact level.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-risk-management/by-impact/:impact",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-risk-management",
								"by-impact",
								":impact"
							],
							"variable": [
								{
									"key": "impact",
									"value": "consequatur"
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-risk-management/by-impact/:impact",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-risk-management",
										"by-impact",
										":impact"
									],
									"variable": [
										{
											"key": "impact",
											"value": "consequatur"
										}
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-risk-management/by-impact/consequatur could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get project risks by probability level.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-risk-management/by-probability/:probability",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-risk-management",
								"by-probability",
								":probability"
							],
							"variable": [
								{
									"key": "probability",
									"value": "consequatur"
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-risk-management/by-probability/:probability",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-risk-management",
										"by-probability",
										":probability"
									],
									"variable": [
										{
											"key": "probability",
											"value": "consequatur"
										}
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-risk-management/by-probability/consequatur could not be found.\"\n}"
						}
					]
				}
			],
			"description": "\nAPIs for managing project risks, including risk assessment, mitigation strategies, and risk monitoring."
		},
		{
			"name": "Project Management / Tasks",
			"item": [
				{
					"name": "Display a listing of tasks.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-tasks/fetch-all",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-tasks",
								"fetch-all"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-tasks/fetch-all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-tasks",
										"fetch-all"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-tasks/fetch-all could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Store a newly created task.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"project_id\":\"consequatur\",\"task_name\":\"mqeopfuudtdsufvyvddqa\",\"assigned_to\":\"consequatur\",\"due_date\":\"2106-10-22\",\"status\":\"in_progress\",\"title\":\"mqeopfuudtdsufvyvddqa\",\"description\":\"Dolores dolorum amet iste laborum eius est dolor.\",\"notes\":\"consequatur\",\"priority\":\"medium\",\"start_date\":\"2020-01-19\",\"estimated_hours\":13,\"actual_hours\":16,\"progress\":5,\"records\":[\"opfuudtdsufvyvddqamni\"]}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-tasks/generate-new",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-tasks",
								"generate-new"
							]
						}
					},
					"response": []
				},
				{
					"name": "Display the specified task.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-tasks/inspect/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-tasks",
								"inspect",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the inspect."
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-tasks/inspect/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-tasks",
										"inspect",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "consequatur",
											"description": "The ID of the inspect."
										}
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-tasks/inspect/consequatur could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Update the specified task.",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"task_name\":\"vmqeopfuudtdsufvyvddq\",\"due_date\":\"2025-09-23T07:29:21\",\"status\":\"blocked\",\"title\":\"amniihfqcoynlazghdtqt\",\"description\":\"Dolores dolorum amet iste laborum eius est dolor.\",\"notes\":\"consequatur\",\"priority\":\"low\",\"start_date\":\"2025-09-23T07:29:21\",\"estimated_hours\":13,\"actual_hours\":16,\"progress\":5,\"records\":[\"opfuudtdsufvyvddqamni\"]}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-tasks/update-existing/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-tasks",
								"update-existing",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the update existing."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove the specified task.",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-tasks/delete-item/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-tasks",
								"delete-item",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "consequatur",
									"description": "The ID of the delete item."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Advanced search for tasks.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-tasks/advanced-search",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-tasks",
								"advanced-search"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-tasks/advanced-search",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-tasks",
										"advanced-search"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-tasks/advanced-search could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get tasks filtered by specific field value (Dynamic Field Selection).",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-tasks/filter-by-field",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-tasks",
								"filter-by-field"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-tasks/filter-by-field",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-tasks",
										"filter-by-field"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-tasks/filter-by-field could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get tasks assigned to the current user (My Tasks).",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-tasks/assigned-to-me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-tasks",
								"assigned-to-me"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-tasks/assigned-to-me",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-tasks",
										"assigned-to-me"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-tasks/assigned-to-me could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get tasks due today (Daily Due Date).",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-tasks/due-today",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-tasks",
								"due-today"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-tasks/due-today",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-tasks",
										"due-today"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-tasks/due-today could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get overdue tasks (tasks past due date but not completed).",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-tasks/overdue-tasks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-tasks",
								"overdue-tasks"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-tasks/overdue-tasks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-tasks",
										"overdue-tasks"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-tasks/overdue-tasks could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get sortable fields for tasks.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-tasks/sortable-fields",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-tasks",
								"sortable-fields"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-tasks/sortable-fields",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-tasks",
										"sortable-fields"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-tasks/sortable-fields could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Sort tasks by specified field and order.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-tasks/apply-sort",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-tasks",
								"apply-sort"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get employees for assignment dropdown.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-tasks/employee-options",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-tasks",
								"employee-options"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-tasks/employee-options",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-tasks",
										"employee-options"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-tasks/employee-options could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get task status options.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-tasks/status-options",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-tasks",
								"status-options"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-tasks/status-options",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-tasks",
										"status-options"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-tasks/status-options could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get task priority options.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-tasks/priority-options",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-tasks",
								"priority-options"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-tasks/priority-options",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-tasks",
										"priority-options"
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-tasks/priority-options could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Get tasks for a specific project.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-tasks/by-project/:projectId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-tasks",
								"by-project",
								":projectId"
							],
							"variable": [
								{
									"key": "projectId",
									"value": "consequatur"
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-tasks/by-project/:projectId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-tasks",
										"by-project",
										":projectId"
									],
									"variable": [
										{
											"key": "projectId",
											"value": "consequatur"
										}
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-tasks/by-project/consequatur could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Upload document for a task.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-tasks/:taskId/upload-document",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-tasks",
								":taskId",
								"upload-document"
							],
							"variable": [
								{
									"key": "taskId",
									"value": "consequatur"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get documents for a task.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-tasks/:taskId/task-documents",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-tasks",
								":taskId",
								"task-documents"
							],
							"variable": [
								{
									"key": "taskId",
									"value": "consequatur"
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/project-tasks/:taskId/task-documents",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"project-tasks",
										":taskId",
										"task-documents"
									],
									"variable": [
										{
											"key": "taskId",
											"value": "consequatur"
										}
									]
								}
							},
							"code": 404,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "cache-control",
									"value": "no-cache, private"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "access-control-allow-origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The route api/v1/project-tasks/consequatur/task-documents could not be found.\"\n}"
						}
					]
				},
				{
					"name": "Delete a task document.",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/project-tasks/document/:documentId/remove",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"project-tasks",
								"document",
								":documentId",
								"remove"
							],
							"variable": [
								{
									"key": "documentId",
									"value": "consequatur"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "\nAPIs for managing project tasks, including creation, updates, assignments, and task lifecycle management."
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "Authorization",
				"type": "any"
			}
		]
	},
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://127.0.0.1:8000/",
			"type": "string"
		}
	]
}